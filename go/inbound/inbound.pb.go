// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: inbound.proto

package inbound

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	grpc_route "github.com/linkerd/linkerd2-proxy-api/go/grpc_route"
	http_route "github.com/linkerd/linkerd2-proxy-api/go/http_route"
	meta "github.com/linkerd/linkerd2-proxy-api/go/meta"
	net "github.com/linkerd/linkerd2-proxy-api/go/net"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PortSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifies a proxy workload (e.g., pod name).
	Workload string `protobuf:"bytes,1,opt,name=workload,proto3" json:"workload,omitempty"`
	// An inbound port on _workload_.
	Port          uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortSpec) Reset() {
	*x = PortSpec{}
	mi := &file_inbound_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortSpec) ProtoMessage() {}

func (x *PortSpec) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortSpec.ProtoReflect.Descriptor instead.
func (*PortSpec) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{0}
}

func (x *PortSpec) GetWorkload() string {
	if x != nil {
		return x.Workload
	}
	return ""
}

func (x *PortSpec) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Server struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set, indicates how the proxy should proxy connections on the specified
	// port.
	Protocol *ProxyProtocol `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Indicates the IP addresses on which the proxy may receive connections.
	// Connections targetting other IP addresses will be dropped.
	ServerIps []*net.IPAddress `protobuf:"bytes,2,rep,name=server_ips,json=serverIps,proto3" json:"server_ips,omitempty"`
	// Configures a proxy to allow connections from the specified clients.
	//
	// If unset, no connections are permitted.
	Authorizations []*Authz `protobuf:"bytes,3,rep,name=authorizations,proto3" json:"authorizations,omitempty"`
	// Descriptive labels to be added to metrics, etc.
	//
	// A control plane SHOULD return the same keys in all policies. That is, we do
	// NOT want to return arbitrary pod labels in this field.
	Labels        map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_inbound_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetProtocol() *ProxyProtocol {
	if x != nil {
		return x.Protocol
	}
	return nil
}

func (x *Server) GetServerIps() []*net.IPAddress {
	if x != nil {
		return x.ServerIps
	}
	return nil
}

func (x *Server) GetAuthorizations() []*Authz {
	if x != nil {
		return x.Authorizations
	}
	return nil
}

func (x *Server) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ProxyProtocol struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*ProxyProtocol_Detect_
	//	*ProxyProtocol_Opaque_
	//	*ProxyProtocol_Tls_
	//	*ProxyProtocol_Http1_
	//	*ProxyProtocol_Http2_
	//	*ProxyProtocol_Grpc_
	Kind          isProxyProtocol_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyProtocol) Reset() {
	*x = ProxyProtocol{}
	mi := &file_inbound_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyProtocol) ProtoMessage() {}

func (x *ProxyProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyProtocol.ProtoReflect.Descriptor instead.
func (*ProxyProtocol) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{2}
}

func (x *ProxyProtocol) GetKind() isProxyProtocol_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *ProxyProtocol) GetDetect() *ProxyProtocol_Detect {
	if x != nil {
		if x, ok := x.Kind.(*ProxyProtocol_Detect_); ok {
			return x.Detect
		}
	}
	return nil
}

func (x *ProxyProtocol) GetOpaque() *ProxyProtocol_Opaque {
	if x != nil {
		if x, ok := x.Kind.(*ProxyProtocol_Opaque_); ok {
			return x.Opaque
		}
	}
	return nil
}

func (x *ProxyProtocol) GetTls() *ProxyProtocol_Tls {
	if x != nil {
		if x, ok := x.Kind.(*ProxyProtocol_Tls_); ok {
			return x.Tls
		}
	}
	return nil
}

func (x *ProxyProtocol) GetHttp1() *ProxyProtocol_Http1 {
	if x != nil {
		if x, ok := x.Kind.(*ProxyProtocol_Http1_); ok {
			return x.Http1
		}
	}
	return nil
}

func (x *ProxyProtocol) GetHttp2() *ProxyProtocol_Http2 {
	if x != nil {
		if x, ok := x.Kind.(*ProxyProtocol_Http2_); ok {
			return x.Http2
		}
	}
	return nil
}

func (x *ProxyProtocol) GetGrpc() *ProxyProtocol_Grpc {
	if x != nil {
		if x, ok := x.Kind.(*ProxyProtocol_Grpc_); ok {
			return x.Grpc
		}
	}
	return nil
}

type isProxyProtocol_Kind interface {
	isProxyProtocol_Kind()
}

type ProxyProtocol_Detect_ struct {
	Detect *ProxyProtocol_Detect `protobuf:"bytes,1,opt,name=detect,proto3,oneof"`
}

type ProxyProtocol_Opaque_ struct {
	Opaque *ProxyProtocol_Opaque `protobuf:"bytes,2,opt,name=opaque,proto3,oneof"`
}

type ProxyProtocol_Tls_ struct {
	Tls *ProxyProtocol_Tls `protobuf:"bytes,3,opt,name=tls,proto3,oneof"`
}

type ProxyProtocol_Http1_ struct {
	Http1 *ProxyProtocol_Http1 `protobuf:"bytes,4,opt,name=http1,proto3,oneof"`
}

type ProxyProtocol_Http2_ struct {
	Http2 *ProxyProtocol_Http2 `protobuf:"bytes,5,opt,name=http2,proto3,oneof"`
}

type ProxyProtocol_Grpc_ struct {
	Grpc *ProxyProtocol_Grpc `protobuf:"bytes,6,opt,name=grpc,proto3,oneof"`
}

func (*ProxyProtocol_Detect_) isProxyProtocol_Kind() {}

func (*ProxyProtocol_Opaque_) isProxyProtocol_Kind() {}

func (*ProxyProtocol_Tls_) isProxyProtocol_Kind() {}

func (*ProxyProtocol_Http1_) isProxyProtocol_Kind() {}

func (*ProxyProtocol_Http2_) isProxyProtocol_Kind() {}

func (*ProxyProtocol_Grpc_) isProxyProtocol_Kind() {}

type Authz struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Limits this authorization to client addresses in the provided networks.
	//
	// Must have at least one network, otherwise the authorization must be
	// ignored. An authorization matches all clients by including an explicit
	// match on, i.e., `[0.0.0.0/0, 0::/0]â€œ.
	Networks []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	// Must be set.
	Authentication *Authn `protobuf:"bytes,2,opt,name=authentication,proto3" json:"authentication,omitempty"`
	// Descriptive labels to be added to metrics, etc.
	//
	// A control plane SHOULD return the same keys in all authorizations. That is,
	// we do NOT want to return arbitrary pod labels in this field.
	//
	// `labels` should be considered deprecated. `metadata` is preferred. However,
	// controllers should continue to set `labels` for compatibility with older
	// proxies.
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// If set, describes an Authorization configuration. Replaces the free-from
	// `labels` field.
	Metadata      *meta.Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Authz) Reset() {
	*x = Authz{}
	mi := &file_inbound_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authz) ProtoMessage() {}

func (x *Authz) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authz.ProtoReflect.Descriptor instead.
func (*Authz) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{3}
}

func (x *Authz) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *Authz) GetAuthentication() *Authn {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *Authz) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Authz) GetMetadata() *meta.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Describes a network of authorized clients.
type Network struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Net           *net.IPNetwork         `protobuf:"bytes,1,opt,name=net,proto3" json:"net,omitempty"`
	Except        []*net.IPNetwork       `protobuf:"bytes,2,rep,name=except,proto3" json:"except,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_inbound_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{4}
}

func (x *Network) GetNet() *net.IPNetwork {
	if x != nil {
		return x.Net
	}
	return nil
}

func (x *Network) GetExcept() []*net.IPNetwork {
	if x != nil {
		return x.Except
	}
	return nil
}

type Authn struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Permit:
	//
	//	*Authn_Unauthenticated
	//	*Authn_MeshTLS
	Permit        isAuthn_Permit `protobuf_oneof:"permit"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Authn) Reset() {
	*x = Authn{}
	mi := &file_inbound_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authn) ProtoMessage() {}

func (x *Authn) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authn.ProtoReflect.Descriptor instead.
func (*Authn) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{5}
}

func (x *Authn) GetPermit() isAuthn_Permit {
	if x != nil {
		return x.Permit
	}
	return nil
}

func (x *Authn) GetUnauthenticated() *Authn_PermitUnauthenticated {
	if x != nil {
		if x, ok := x.Permit.(*Authn_Unauthenticated); ok {
			return x.Unauthenticated
		}
	}
	return nil
}

func (x *Authn) GetMeshTLS() *Authn_PermitMeshTLS {
	if x != nil {
		if x, ok := x.Permit.(*Authn_MeshTLS); ok {
			return x.MeshTLS
		}
	}
	return nil
}

type isAuthn_Permit interface {
	isAuthn_Permit()
}

type Authn_Unauthenticated struct {
	Unauthenticated *Authn_PermitUnauthenticated `protobuf:"bytes,1,opt,name=unauthenticated,proto3,oneof"`
}

type Authn_MeshTLS struct {
	// If set, requires that the connection is transported over mesh TLS.
	MeshTLS *Authn_PermitMeshTLS `protobuf:"bytes,2,opt,name=meshTLS,proto3,oneof"`
}

func (*Authn_Unauthenticated) isAuthn_Permit() {}

func (*Authn_MeshTLS) isAuthn_Permit() {}

type Identity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Identity) Reset() {
	*x = Identity{}
	mi := &file_inbound_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{6}
}

func (x *Identity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Encodes a DNS-like name suffix as sequence of parts.
//
// An empty list is equivalent to `.` (matching all names); the list `["foo",
// "bar"]` is equivalent to "foo.bar." (matching `*.foo.bar`), etc.
type IdentitySuffix struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parts         []string               `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentitySuffix) Reset() {
	*x = IdentitySuffix{}
	mi := &file_inbound_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentitySuffix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentitySuffix) ProtoMessage() {}

func (x *IdentitySuffix) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentitySuffix.ProtoReflect.Descriptor instead.
func (*IdentitySuffix) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{7}
}

func (x *IdentitySuffix) GetParts() []string {
	if x != nil {
		return x.Parts
	}
	return nil
}

// Inbound-specific HTTP route configuration (based on the
// [Gateway API](https://gateway-api.sigs.k8s.io/v1alpha2/references/spec/#gateway.networking.k8s.io/v1alpha2.HTTPRoute)).
type HttpRoute struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Metadata *meta.Metadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// If empty, the host value is ignored.
	Hosts []*http_route.HostMatch `protobuf:"bytes,2,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// Extends the list of authorizations on the `Server` with authorizations
	// specific to this route.
	Authorizations []*Authz `protobuf:"bytes,3,rep,name=authorizations,proto3" json:"authorizations,omitempty"`
	// Must have at least one rule.
	Rules         []*HttpRoute_Rule `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpRoute) Reset() {
	*x = HttpRoute{}
	mi := &file_inbound_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRoute) ProtoMessage() {}

func (x *HttpRoute) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRoute.ProtoReflect.Descriptor instead.
func (*HttpRoute) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{8}
}

func (x *HttpRoute) GetMetadata() *meta.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *HttpRoute) GetHosts() []*http_route.HostMatch {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *HttpRoute) GetAuthorizations() []*Authz {
	if x != nil {
		return x.Authorizations
	}
	return nil
}

func (x *HttpRoute) GetRules() []*HttpRoute_Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

// Inbound-specific gRPC route configuration.
type GrpcRoute struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Metadata *meta.Metadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// If empty, the host value is ignored.
	Hosts []*http_route.HostMatch `protobuf:"bytes,2,rep,name=hosts,proto3" json:"hosts,omitempty"`
	// The server MUST return at least one authorization, otherwise all requests
	// to this route will fail with an unauthorized response.
	Authorizations []*Authz `protobuf:"bytes,3,rep,name=authorizations,proto3" json:"authorizations,omitempty"`
	// Must have at least one rule.
	Rules         []*GrpcRoute_Rule `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrpcRoute) Reset() {
	*x = GrpcRoute{}
	mi := &file_inbound_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcRoute) ProtoMessage() {}

func (x *GrpcRoute) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcRoute.ProtoReflect.Descriptor instead.
func (*GrpcRoute) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{9}
}

func (x *GrpcRoute) GetMetadata() *meta.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GrpcRoute) GetHosts() []*http_route.HostMatch {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *GrpcRoute) GetAuthorizations() []*Authz {
	if x != nil {
		return x.Authorizations
	}
	return nil
}

func (x *GrpcRoute) GetRules() []*GrpcRoute_Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type HttpLocalRateLimit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Describes the associated HTTPLocalRateLimitPolicy resource
	Metadata *meta.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Overall rate-limit, which all traffic coming to this server should abide
	// to. If unset no overall limit is applied.
	Total *HttpLocalRateLimit_Limit `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
	// Fairness for individual identities; each separate client, grouped by
	// identity, will have this rate-limit.
	Identity *HttpLocalRateLimit_Limit `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
	// Limit overrides for traffic from a specific client.
	Overrides     []*HttpLocalRateLimit_Override `protobuf:"bytes,4,rep,name=overrides,proto3" json:"overrides,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpLocalRateLimit) Reset() {
	*x = HttpLocalRateLimit{}
	mi := &file_inbound_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpLocalRateLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpLocalRateLimit) ProtoMessage() {}

func (x *HttpLocalRateLimit) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpLocalRateLimit.ProtoReflect.Descriptor instead.
func (*HttpLocalRateLimit) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{10}
}

func (x *HttpLocalRateLimit) GetMetadata() *meta.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *HttpLocalRateLimit) GetTotal() *HttpLocalRateLimit_Limit {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *HttpLocalRateLimit) GetIdentity() *HttpLocalRateLimit_Limit {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *HttpLocalRateLimit) GetOverrides() []*HttpLocalRateLimit_Override {
	if x != nil {
		return x.Overrides
	}
	return nil
}

type ProxyProtocol_Detect struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Timeout *duration.Duration     `protobuf:"bytes,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// If the protocol detected as HTTP, a list of HTTP routes that should be
	// matched.
	HttpRoutes []*HttpRoute `protobuf:"bytes,3,rep,name=http_routes,json=httpRoutes,proto3" json:"http_routes,omitempty"`
	// If the protocol detected as HTTP, applicable rate limit.
	HttpLocalRateLimit *HttpLocalRateLimit `protobuf:"bytes,4,opt,name=http_local_rate_limit,json=httpLocalRateLimit,proto3" json:"http_local_rate_limit,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProxyProtocol_Detect) Reset() {
	*x = ProxyProtocol_Detect{}
	mi := &file_inbound_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyProtocol_Detect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyProtocol_Detect) ProtoMessage() {}

func (x *ProxyProtocol_Detect) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyProtocol_Detect.ProtoReflect.Descriptor instead.
func (*ProxyProtocol_Detect) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ProxyProtocol_Detect) GetTimeout() *duration.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *ProxyProtocol_Detect) GetHttpRoutes() []*HttpRoute {
	if x != nil {
		return x.HttpRoutes
	}
	return nil
}

func (x *ProxyProtocol_Detect) GetHttpLocalRateLimit() *HttpLocalRateLimit {
	if x != nil {
		return x.HttpLocalRateLimit
	}
	return nil
}

type ProxyProtocol_Http1 struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Routes         []*HttpRoute           `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	LocalRateLimit *HttpLocalRateLimit    `protobuf:"bytes,3,opt,name=local_rate_limit,json=localRateLimit,proto3" json:"local_rate_limit,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProxyProtocol_Http1) Reset() {
	*x = ProxyProtocol_Http1{}
	mi := &file_inbound_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyProtocol_Http1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyProtocol_Http1) ProtoMessage() {}

func (x *ProxyProtocol_Http1) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyProtocol_Http1.ProtoReflect.Descriptor instead.
func (*ProxyProtocol_Http1) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ProxyProtocol_Http1) GetRoutes() []*HttpRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *ProxyProtocol_Http1) GetLocalRateLimit() *HttpLocalRateLimit {
	if x != nil {
		return x.LocalRateLimit
	}
	return nil
}

type ProxyProtocol_Http2 struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Routes         []*HttpRoute           `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	LocalRateLimit *HttpLocalRateLimit    `protobuf:"bytes,3,opt,name=local_rate_limit,json=localRateLimit,proto3" json:"local_rate_limit,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProxyProtocol_Http2) Reset() {
	*x = ProxyProtocol_Http2{}
	mi := &file_inbound_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyProtocol_Http2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyProtocol_Http2) ProtoMessage() {}

func (x *ProxyProtocol_Http2) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyProtocol_Http2.ProtoReflect.Descriptor instead.
func (*ProxyProtocol_Http2) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{2, 2}
}

func (x *ProxyProtocol_Http2) GetRoutes() []*HttpRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *ProxyProtocol_Http2) GetLocalRateLimit() *HttpLocalRateLimit {
	if x != nil {
		return x.LocalRateLimit
	}
	return nil
}

type ProxyProtocol_Grpc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Routes        []*GrpcRoute           `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyProtocol_Grpc) Reset() {
	*x = ProxyProtocol_Grpc{}
	mi := &file_inbound_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyProtocol_Grpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyProtocol_Grpc) ProtoMessage() {}

func (x *ProxyProtocol_Grpc) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyProtocol_Grpc.ProtoReflect.Descriptor instead.
func (*ProxyProtocol_Grpc) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{2, 3}
}

func (x *ProxyProtocol_Grpc) GetRoutes() []*GrpcRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

type ProxyProtocol_Opaque struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyProtocol_Opaque) Reset() {
	*x = ProxyProtocol_Opaque{}
	mi := &file_inbound_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyProtocol_Opaque) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyProtocol_Opaque) ProtoMessage() {}

func (x *ProxyProtocol_Opaque) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyProtocol_Opaque.ProtoReflect.Descriptor instead.
func (*ProxyProtocol_Opaque) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{2, 4}
}

type ProxyProtocol_Tls struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyProtocol_Tls) Reset() {
	*x = ProxyProtocol_Tls{}
	mi := &file_inbound_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyProtocol_Tls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyProtocol_Tls) ProtoMessage() {}

func (x *ProxyProtocol_Tls) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyProtocol_Tls.ProtoReflect.Descriptor instead.
func (*ProxyProtocol_Tls) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{2, 5}
}

type Authn_PermitUnauthenticated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Authn_PermitUnauthenticated) Reset() {
	*x = Authn_PermitUnauthenticated{}
	mi := &file_inbound_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authn_PermitUnauthenticated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authn_PermitUnauthenticated) ProtoMessage() {}

func (x *Authn_PermitUnauthenticated) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authn_PermitUnauthenticated.ProtoReflect.Descriptor instead.
func (*Authn_PermitUnauthenticated) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{5, 0}
}

type Authn_PermitMeshTLS struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Clients:
	//
	//	*Authn_PermitMeshTLS_Unauthenticated
	//	*Authn_PermitMeshTLS_Identities
	Clients       isAuthn_PermitMeshTLS_Clients `protobuf_oneof:"clients"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Authn_PermitMeshTLS) Reset() {
	*x = Authn_PermitMeshTLS{}
	mi := &file_inbound_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authn_PermitMeshTLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authn_PermitMeshTLS) ProtoMessage() {}

func (x *Authn_PermitMeshTLS) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authn_PermitMeshTLS.ProtoReflect.Descriptor instead.
func (*Authn_PermitMeshTLS) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Authn_PermitMeshTLS) GetClients() isAuthn_PermitMeshTLS_Clients {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *Authn_PermitMeshTLS) GetUnauthenticated() *Authn_PermitUnauthenticated {
	if x != nil {
		if x, ok := x.Clients.(*Authn_PermitMeshTLS_Unauthenticated); ok {
			return x.Unauthenticated
		}
	}
	return nil
}

func (x *Authn_PermitMeshTLS) GetIdentities() *Authn_PermitMeshTLS_PermitClientIdentities {
	if x != nil {
		if x, ok := x.Clients.(*Authn_PermitMeshTLS_Identities); ok {
			return x.Identities
		}
	}
	return nil
}

type isAuthn_PermitMeshTLS_Clients interface {
	isAuthn_PermitMeshTLS_Clients()
}

type Authn_PermitMeshTLS_Unauthenticated struct {
	// Indicates that client identities are not required.
	Unauthenticated *Authn_PermitUnauthenticated `protobuf:"bytes,1,opt,name=unauthenticated,proto3,oneof"`
}

type Authn_PermitMeshTLS_Identities struct {
	// Indicates that mutually-authenticated connections are permitted from
	// clients with matching identities.
	Identities *Authn_PermitMeshTLS_PermitClientIdentities `protobuf:"bytes,2,opt,name=identities,proto3,oneof"`
}

func (*Authn_PermitMeshTLS_Unauthenticated) isAuthn_PermitMeshTLS_Clients() {}

func (*Authn_PermitMeshTLS_Identities) isAuthn_PermitMeshTLS_Clients() {}

type Authn_PermitMeshTLS_PermitClientIdentities struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of literal identities.
	Identities []*Identity `protobuf:"bytes,1,rep,name=identities,proto3" json:"identities,omitempty"`
	// A list of identity suffixes.
	//
	// If this contains an empty suffix, all identities are matched.
	Suffixes      []*IdentitySuffix `protobuf:"bytes,2,rep,name=suffixes,proto3" json:"suffixes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Authn_PermitMeshTLS_PermitClientIdentities) Reset() {
	*x = Authn_PermitMeshTLS_PermitClientIdentities{}
	mi := &file_inbound_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authn_PermitMeshTLS_PermitClientIdentities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authn_PermitMeshTLS_PermitClientIdentities) ProtoMessage() {}

func (x *Authn_PermitMeshTLS_PermitClientIdentities) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authn_PermitMeshTLS_PermitClientIdentities.ProtoReflect.Descriptor instead.
func (*Authn_PermitMeshTLS_PermitClientIdentities) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{5, 1, 0}
}

func (x *Authn_PermitMeshTLS_PermitClientIdentities) GetIdentities() []*Identity {
	if x != nil {
		return x.Identities
	}
	return nil
}

func (x *Authn_PermitMeshTLS_PermitClientIdentities) GetSuffixes() []*IdentitySuffix {
	if x != nil {
		return x.Suffixes
	}
	return nil
}

type HttpRoute_Rule struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Matches       []*http_route.HttpRouteMatch `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
	Filters       []*HttpRoute_Filter          `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpRoute_Rule) Reset() {
	*x = HttpRoute_Rule{}
	mi := &file_inbound_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRoute_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRoute_Rule) ProtoMessage() {}

func (x *HttpRoute_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRoute_Rule.ProtoReflect.Descriptor instead.
func (*HttpRoute_Rule) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{8, 0}
}

func (x *HttpRoute_Rule) GetMatches() []*http_route.HttpRouteMatch {
	if x != nil {
		return x.Matches
	}
	return nil
}

func (x *HttpRoute_Rule) GetFilters() []*HttpRoute_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type HttpRoute_Filter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*HttpRoute_Filter_FailureInjector
	//	*HttpRoute_Filter_RequestHeaderModifier
	//	*HttpRoute_Filter_Redirect
	Kind          isHttpRoute_Filter_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpRoute_Filter) Reset() {
	*x = HttpRoute_Filter{}
	mi := &file_inbound_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRoute_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRoute_Filter) ProtoMessage() {}

func (x *HttpRoute_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRoute_Filter.ProtoReflect.Descriptor instead.
func (*HttpRoute_Filter) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{8, 1}
}

func (x *HttpRoute_Filter) GetKind() isHttpRoute_Filter_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *HttpRoute_Filter) GetFailureInjector() *http_route.HttpFailureInjector {
	if x != nil {
		if x, ok := x.Kind.(*HttpRoute_Filter_FailureInjector); ok {
			return x.FailureInjector
		}
	}
	return nil
}

func (x *HttpRoute_Filter) GetRequestHeaderModifier() *http_route.RequestHeaderModifier {
	if x != nil {
		if x, ok := x.Kind.(*HttpRoute_Filter_RequestHeaderModifier); ok {
			return x.RequestHeaderModifier
		}
	}
	return nil
}

func (x *HttpRoute_Filter) GetRedirect() *http_route.RequestRedirect {
	if x != nil {
		if x, ok := x.Kind.(*HttpRoute_Filter_Redirect); ok {
			return x.Redirect
		}
	}
	return nil
}

type isHttpRoute_Filter_Kind interface {
	isHttpRoute_Filter_Kind()
}

type HttpRoute_Filter_FailureInjector struct {
	FailureInjector *http_route.HttpFailureInjector `protobuf:"bytes,1,opt,name=failure_injector,json=failureInjector,proto3,oneof"`
}

type HttpRoute_Filter_RequestHeaderModifier struct {
	RequestHeaderModifier *http_route.RequestHeaderModifier `protobuf:"bytes,2,opt,name=request_header_modifier,json=requestHeaderModifier,proto3,oneof"`
}

type HttpRoute_Filter_Redirect struct {
	Redirect *http_route.RequestRedirect `protobuf:"bytes,3,opt,name=redirect,proto3,oneof"`
}

func (*HttpRoute_Filter_FailureInjector) isHttpRoute_Filter_Kind() {}

func (*HttpRoute_Filter_RequestHeaderModifier) isHttpRoute_Filter_Kind() {}

func (*HttpRoute_Filter_Redirect) isHttpRoute_Filter_Kind() {}

type GrpcRoute_Rule struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Matches       []*grpc_route.GrpcRouteMatch `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
	Filters       []*GrpcRoute_Filter          `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrpcRoute_Rule) Reset() {
	*x = GrpcRoute_Rule{}
	mi := &file_inbound_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcRoute_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcRoute_Rule) ProtoMessage() {}

func (x *GrpcRoute_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcRoute_Rule.ProtoReflect.Descriptor instead.
func (*GrpcRoute_Rule) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GrpcRoute_Rule) GetMatches() []*grpc_route.GrpcRouteMatch {
	if x != nil {
		return x.Matches
	}
	return nil
}

func (x *GrpcRoute_Rule) GetFilters() []*GrpcRoute_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type GrpcRoute_Filter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*GrpcRoute_Filter_FailureInjector
	//	*GrpcRoute_Filter_RequestHeaderModifier
	Kind          isGrpcRoute_Filter_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrpcRoute_Filter) Reset() {
	*x = GrpcRoute_Filter{}
	mi := &file_inbound_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcRoute_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcRoute_Filter) ProtoMessage() {}

func (x *GrpcRoute_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcRoute_Filter.ProtoReflect.Descriptor instead.
func (*GrpcRoute_Filter) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{9, 1}
}

func (x *GrpcRoute_Filter) GetKind() isGrpcRoute_Filter_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *GrpcRoute_Filter) GetFailureInjector() *grpc_route.GrpcFailureInjector {
	if x != nil {
		if x, ok := x.Kind.(*GrpcRoute_Filter_FailureInjector); ok {
			return x.FailureInjector
		}
	}
	return nil
}

func (x *GrpcRoute_Filter) GetRequestHeaderModifier() *http_route.RequestHeaderModifier {
	if x != nil {
		if x, ok := x.Kind.(*GrpcRoute_Filter_RequestHeaderModifier); ok {
			return x.RequestHeaderModifier
		}
	}
	return nil
}

type isGrpcRoute_Filter_Kind interface {
	isGrpcRoute_Filter_Kind()
}

type GrpcRoute_Filter_FailureInjector struct {
	FailureInjector *grpc_route.GrpcFailureInjector `protobuf:"bytes,1,opt,name=failure_injector,json=failureInjector,proto3,oneof"`
}

type GrpcRoute_Filter_RequestHeaderModifier struct {
	RequestHeaderModifier *http_route.RequestHeaderModifier `protobuf:"bytes,2,opt,name=request_header_modifier,json=requestHeaderModifier,proto3,oneof"`
}

func (*GrpcRoute_Filter_FailureInjector) isGrpcRoute_Filter_Kind() {}

func (*GrpcRoute_Filter_RequestHeaderModifier) isGrpcRoute_Filter_Kind() {}

type HttpLocalRateLimit_Override struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Limit         *HttpLocalRateLimit_Limit                     `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Clients       *HttpLocalRateLimit_Override_ClientIdentities `protobuf:"bytes,2,opt,name=clients,proto3" json:"clients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpLocalRateLimit_Override) Reset() {
	*x = HttpLocalRateLimit_Override{}
	mi := &file_inbound_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpLocalRateLimit_Override) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpLocalRateLimit_Override) ProtoMessage() {}

func (x *HttpLocalRateLimit_Override) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpLocalRateLimit_Override.ProtoReflect.Descriptor instead.
func (*HttpLocalRateLimit_Override) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{10, 0}
}

func (x *HttpLocalRateLimit_Override) GetLimit() *HttpLocalRateLimit_Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *HttpLocalRateLimit_Override) GetClients() *HttpLocalRateLimit_Override_ClientIdentities {
	if x != nil {
		return x.Clients
	}
	return nil
}

type HttpLocalRateLimit_Limit struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RequestsPerSecond uint32                 `protobuf:"varint,1,opt,name=requestsPerSecond,proto3" json:"requestsPerSecond,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HttpLocalRateLimit_Limit) Reset() {
	*x = HttpLocalRateLimit_Limit{}
	mi := &file_inbound_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpLocalRateLimit_Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpLocalRateLimit_Limit) ProtoMessage() {}

func (x *HttpLocalRateLimit_Limit) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpLocalRateLimit_Limit.ProtoReflect.Descriptor instead.
func (*HttpLocalRateLimit_Limit) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{10, 1}
}

func (x *HttpLocalRateLimit_Limit) GetRequestsPerSecond() uint32 {
	if x != nil {
		return x.RequestsPerSecond
	}
	return 0
}

type HttpLocalRateLimit_Override_ClientIdentities struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of literal identities.
	Identities    []*Identity `protobuf:"bytes,1,rep,name=identities,proto3" json:"identities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpLocalRateLimit_Override_ClientIdentities) Reset() {
	*x = HttpLocalRateLimit_Override_ClientIdentities{}
	mi := &file_inbound_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpLocalRateLimit_Override_ClientIdentities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpLocalRateLimit_Override_ClientIdentities) ProtoMessage() {}

func (x *HttpLocalRateLimit_Override_ClientIdentities) ProtoReflect() protoreflect.Message {
	mi := &file_inbound_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpLocalRateLimit_Override_ClientIdentities.ProtoReflect.Descriptor instead.
func (*HttpLocalRateLimit_Override_ClientIdentities) Descriptor() ([]byte, []int) {
	return file_inbound_proto_rawDescGZIP(), []int{10, 0, 0}
}

func (x *HttpLocalRateLimit_Override_ClientIdentities) GetIdentities() []*Identity {
	if x != nil {
		return x.Identities
	}
	return nil
}

var File_inbound_proto protoreflect.FileDescriptor

const file_inbound_proto_rawDesc = "" +
	"\n" +
	"\rinbound.proto\x12\x18io.linkerd.proxy.inbound\x1a\x1egoogle/protobuf/duration.proto\x1a\x10grpc_route.proto\x1a\x10http_route.proto\x1a\n" +
	"meta.proto\x1a\tnet.proto\":\n" +
	"\bPortSpec\x12\x1a\n" +
	"\bworkload\x18\x01 \x01(\tR\bworkload\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\"\xd7\x02\n" +
	"\x06Server\x12C\n" +
	"\bprotocol\x18\x01 \x01(\v2'.io.linkerd.proxy.inbound.ProxyProtocolR\bprotocol\x12>\n" +
	"\n" +
	"server_ips\x18\x02 \x03(\v2\x1f.io.linkerd.proxy.net.IPAddressR\tserverIps\x12G\n" +
	"\x0eauthorizations\x18\x03 \x03(\v2\x1f.io.linkerd.proxy.inbound.AuthzR\x0eauthorizations\x12D\n" +
	"\x06labels\x18\x04 \x03(\v2,.io.linkerd.proxy.inbound.Server.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd1\b\n" +
	"\rProxyProtocol\x12H\n" +
	"\x06detect\x18\x01 \x01(\v2..io.linkerd.proxy.inbound.ProxyProtocol.DetectH\x00R\x06detect\x12H\n" +
	"\x06opaque\x18\x02 \x01(\v2..io.linkerd.proxy.inbound.ProxyProtocol.OpaqueH\x00R\x06opaque\x12?\n" +
	"\x03tls\x18\x03 \x01(\v2+.io.linkerd.proxy.inbound.ProxyProtocol.TlsH\x00R\x03tls\x12E\n" +
	"\x05http1\x18\x04 \x01(\v2-.io.linkerd.proxy.inbound.ProxyProtocol.Http1H\x00R\x05http1\x12E\n" +
	"\x05http2\x18\x05 \x01(\v2-.io.linkerd.proxy.inbound.ProxyProtocol.Http2H\x00R\x05http2\x12B\n" +
	"\x04grpc\x18\x06 \x01(\v2,.io.linkerd.proxy.inbound.ProxyProtocol.GrpcH\x00R\x04grpc\x1a\xea\x01\n" +
	"\x06Detect\x123\n" +
	"\atimeout\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12D\n" +
	"\vhttp_routes\x18\x03 \x03(\v2#.io.linkerd.proxy.inbound.HttpRouteR\n" +
	"httpRoutes\x12_\n" +
	"\x15http_local_rate_limit\x18\x04 \x01(\v2,.io.linkerd.proxy.inbound.HttpLocalRateLimitR\x12httpLocalRateLimitJ\x04\b\x02\x10\x03\x1a\xa2\x01\n" +
	"\x05Http1\x12;\n" +
	"\x06routes\x18\x02 \x03(\v2#.io.linkerd.proxy.inbound.HttpRouteR\x06routes\x12V\n" +
	"\x10local_rate_limit\x18\x03 \x01(\v2,.io.linkerd.proxy.inbound.HttpLocalRateLimitR\x0elocalRateLimitJ\x04\b\x01\x10\x02\x1a\xa2\x01\n" +
	"\x05Http2\x12;\n" +
	"\x06routes\x18\x02 \x03(\v2#.io.linkerd.proxy.inbound.HttpRouteR\x06routes\x12V\n" +
	"\x10local_rate_limit\x18\x03 \x01(\v2,.io.linkerd.proxy.inbound.HttpLocalRateLimitR\x0elocalRateLimitJ\x04\b\x01\x10\x02\x1aI\n" +
	"\x04Grpc\x12;\n" +
	"\x06routes\x18\x02 \x03(\v2#.io.linkerd.proxy.inbound.GrpcRouteR\x06routesJ\x04\b\x01\x10\x02\x1a\b\n" +
	"\x06Opaque\x1a\x05\n" +
	"\x03TlsB\x06\n" +
	"\x04kind\"\xcc\x02\n" +
	"\x05Authz\x12=\n" +
	"\bnetworks\x18\x01 \x03(\v2!.io.linkerd.proxy.inbound.NetworkR\bnetworks\x12G\n" +
	"\x0eauthentication\x18\x02 \x01(\v2\x1f.io.linkerd.proxy.inbound.AuthnR\x0eauthentication\x12C\n" +
	"\x06labels\x18\x03 \x03(\v2+.io.linkerd.proxy.inbound.Authz.LabelsEntryR\x06labels\x12;\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1f.io.linkerd.proxy.meta.MetadataR\bmetadata\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"u\n" +
	"\aNetwork\x121\n" +
	"\x03net\x18\x01 \x01(\v2\x1f.io.linkerd.proxy.net.IPNetworkR\x03net\x127\n" +
	"\x06except\x18\x02 \x03(\v2\x1f.io.linkerd.proxy.net.IPNetworkR\x06except\"\xe5\x04\n" +
	"\x05Authn\x12a\n" +
	"\x0funauthenticated\x18\x01 \x01(\v25.io.linkerd.proxy.inbound.Authn.PermitUnauthenticatedH\x00R\x0funauthenticated\x12I\n" +
	"\ameshTLS\x18\x02 \x01(\v2-.io.linkerd.proxy.inbound.Authn.PermitMeshTLSH\x00R\ameshTLS\x1a\x17\n" +
	"\x15PermitUnauthenticated\x1a\x8a\x03\n" +
	"\rPermitMeshTLS\x12a\n" +
	"\x0funauthenticated\x18\x01 \x01(\v25.io.linkerd.proxy.inbound.Authn.PermitUnauthenticatedH\x00R\x0funauthenticated\x12f\n" +
	"\n" +
	"identities\x18\x02 \x01(\v2D.io.linkerd.proxy.inbound.Authn.PermitMeshTLS.PermitClientIdentitiesH\x00R\n" +
	"identities\x1a\xa2\x01\n" +
	"\x16PermitClientIdentities\x12B\n" +
	"\n" +
	"identities\x18\x01 \x03(\v2\".io.linkerd.proxy.inbound.IdentityR\n" +
	"identities\x12D\n" +
	"\bsuffixes\x18\x02 \x03(\v2(.io.linkerd.proxy.inbound.IdentitySuffixR\bsuffixesB\t\n" +
	"\aclientsB\b\n" +
	"\x06permit\"\x1e\n" +
	"\bIdentity\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"&\n" +
	"\x0eIdentitySuffix\x12\x14\n" +
	"\x05parts\x18\x01 \x03(\tR\x05parts\"\xd1\x05\n" +
	"\tHttpRoute\x12;\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1f.io.linkerd.proxy.meta.MetadataR\bmetadata\x12<\n" +
	"\x05hosts\x18\x02 \x03(\v2&.io.linkerd.proxy.http_route.HostMatchR\x05hosts\x12G\n" +
	"\x0eauthorizations\x18\x03 \x03(\v2\x1f.io.linkerd.proxy.inbound.AuthzR\x0eauthorizations\x12>\n" +
	"\x05rules\x18\x04 \x03(\v2(.io.linkerd.proxy.inbound.HttpRoute.RuleR\x05rules\x1a\x93\x01\n" +
	"\x04Rule\x12E\n" +
	"\amatches\x18\x01 \x03(\v2+.io.linkerd.proxy.http_route.HttpRouteMatchR\amatches\x12D\n" +
	"\afilters\x18\x02 \x03(\v2*.io.linkerd.proxy.inbound.HttpRoute.FilterR\afilters\x1a\xa9\x02\n" +
	"\x06Filter\x12]\n" +
	"\x10failure_injector\x18\x01 \x01(\v20.io.linkerd.proxy.http_route.HttpFailureInjectorH\x00R\x0ffailureInjector\x12l\n" +
	"\x17request_header_modifier\x18\x02 \x01(\v22.io.linkerd.proxy.http_route.RequestHeaderModifierH\x00R\x15requestHeaderModifier\x12J\n" +
	"\bredirect\x18\x03 \x01(\v2,.io.linkerd.proxy.http_route.RequestRedirectH\x00R\bredirectB\x06\n" +
	"\x04kind\"\x85\x05\n" +
	"\tGrpcRoute\x12;\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1f.io.linkerd.proxy.meta.MetadataR\bmetadata\x12<\n" +
	"\x05hosts\x18\x02 \x03(\v2&.io.linkerd.proxy.http_route.HostMatchR\x05hosts\x12G\n" +
	"\x0eauthorizations\x18\x03 \x03(\v2\x1f.io.linkerd.proxy.inbound.AuthzR\x0eauthorizations\x12>\n" +
	"\x05rules\x18\x04 \x03(\v2(.io.linkerd.proxy.inbound.GrpcRoute.RuleR\x05rules\x1a\x93\x01\n" +
	"\x04Rule\x12E\n" +
	"\amatches\x18\x01 \x03(\v2+.io.linkerd.proxy.grpc_route.GrpcRouteMatchR\amatches\x12D\n" +
	"\afilters\x18\x02 \x03(\v2*.io.linkerd.proxy.inbound.GrpcRoute.FilterR\afilters\x1a\xdd\x01\n" +
	"\x06Filter\x12]\n" +
	"\x10failure_injector\x18\x01 \x01(\v20.io.linkerd.proxy.grpc_route.GrpcFailureInjectorH\x00R\x0ffailureInjector\x12l\n" +
	"\x17request_header_modifier\x18\x02 \x01(\v22.io.linkerd.proxy.http_route.RequestHeaderModifierH\x00R\x15requestHeaderModifierB\x06\n" +
	"\x04kind\"\x88\x05\n" +
	"\x12HttpLocalRateLimit\x12;\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1f.io.linkerd.proxy.meta.MetadataR\bmetadata\x12H\n" +
	"\x05total\x18\x02 \x01(\v22.io.linkerd.proxy.inbound.HttpLocalRateLimit.LimitR\x05total\x12N\n" +
	"\bidentity\x18\x03 \x01(\v22.io.linkerd.proxy.inbound.HttpLocalRateLimit.LimitR\bidentity\x12S\n" +
	"\toverrides\x18\x04 \x03(\v25.io.linkerd.proxy.inbound.HttpLocalRateLimit.OverrideR\toverrides\x1a\x8e\x02\n" +
	"\bOverride\x12H\n" +
	"\x05limit\x18\x01 \x01(\v22.io.linkerd.proxy.inbound.HttpLocalRateLimit.LimitR\x05limit\x12`\n" +
	"\aclients\x18\x02 \x01(\v2F.io.linkerd.proxy.inbound.HttpLocalRateLimit.Override.ClientIdentitiesR\aclients\x1aV\n" +
	"\x10ClientIdentities\x12B\n" +
	"\n" +
	"identities\x18\x01 \x03(\v2\".io.linkerd.proxy.inbound.IdentityR\n" +
	"identities\x1a5\n" +
	"\x05Limit\x12,\n" +
	"\x11requestsPerSecond\x18\x01 \x01(\rR\x11requestsPerSecond2\xc1\x01\n" +
	"\x15InboundServerPolicies\x12Q\n" +
	"\aGetPort\x12\".io.linkerd.proxy.inbound.PortSpec\x1a .io.linkerd.proxy.inbound.Server\"\x00\x12U\n" +
	"\tWatchPort\x12\".io.linkerd.proxy.inbound.PortSpec\x1a .io.linkerd.proxy.inbound.Server\"\x000\x01B2Z0github.com/linkerd/linkerd2-proxy-api/go/inboundb\x06proto3"

var (
	file_inbound_proto_rawDescOnce sync.Once
	file_inbound_proto_rawDescData []byte
)

func file_inbound_proto_rawDescGZIP() []byte {
	file_inbound_proto_rawDescOnce.Do(func() {
		file_inbound_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_inbound_proto_rawDesc), len(file_inbound_proto_rawDesc)))
	})
	return file_inbound_proto_rawDescData
}

var file_inbound_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_inbound_proto_goTypes = []any{
	(*PortSpec)(nil),                    // 0: io.linkerd.proxy.inbound.PortSpec
	(*Server)(nil),                      // 1: io.linkerd.proxy.inbound.Server
	(*ProxyProtocol)(nil),               // 2: io.linkerd.proxy.inbound.ProxyProtocol
	(*Authz)(nil),                       // 3: io.linkerd.proxy.inbound.Authz
	(*Network)(nil),                     // 4: io.linkerd.proxy.inbound.Network
	(*Authn)(nil),                       // 5: io.linkerd.proxy.inbound.Authn
	(*Identity)(nil),                    // 6: io.linkerd.proxy.inbound.Identity
	(*IdentitySuffix)(nil),              // 7: io.linkerd.proxy.inbound.IdentitySuffix
	(*HttpRoute)(nil),                   // 8: io.linkerd.proxy.inbound.HttpRoute
	(*GrpcRoute)(nil),                   // 9: io.linkerd.proxy.inbound.GrpcRoute
	(*HttpLocalRateLimit)(nil),          // 10: io.linkerd.proxy.inbound.HttpLocalRateLimit
	nil,                                 // 11: io.linkerd.proxy.inbound.Server.LabelsEntry
	(*ProxyProtocol_Detect)(nil),        // 12: io.linkerd.proxy.inbound.ProxyProtocol.Detect
	(*ProxyProtocol_Http1)(nil),         // 13: io.linkerd.proxy.inbound.ProxyProtocol.Http1
	(*ProxyProtocol_Http2)(nil),         // 14: io.linkerd.proxy.inbound.ProxyProtocol.Http2
	(*ProxyProtocol_Grpc)(nil),          // 15: io.linkerd.proxy.inbound.ProxyProtocol.Grpc
	(*ProxyProtocol_Opaque)(nil),        // 16: io.linkerd.proxy.inbound.ProxyProtocol.Opaque
	(*ProxyProtocol_Tls)(nil),           // 17: io.linkerd.proxy.inbound.ProxyProtocol.Tls
	nil,                                 // 18: io.linkerd.proxy.inbound.Authz.LabelsEntry
	(*Authn_PermitUnauthenticated)(nil), // 19: io.linkerd.proxy.inbound.Authn.PermitUnauthenticated
	(*Authn_PermitMeshTLS)(nil),         // 20: io.linkerd.proxy.inbound.Authn.PermitMeshTLS
	(*Authn_PermitMeshTLS_PermitClientIdentities)(nil),   // 21: io.linkerd.proxy.inbound.Authn.PermitMeshTLS.PermitClientIdentities
	(*HttpRoute_Rule)(nil),                               // 22: io.linkerd.proxy.inbound.HttpRoute.Rule
	(*HttpRoute_Filter)(nil),                             // 23: io.linkerd.proxy.inbound.HttpRoute.Filter
	(*GrpcRoute_Rule)(nil),                               // 24: io.linkerd.proxy.inbound.GrpcRoute.Rule
	(*GrpcRoute_Filter)(nil),                             // 25: io.linkerd.proxy.inbound.GrpcRoute.Filter
	(*HttpLocalRateLimit_Override)(nil),                  // 26: io.linkerd.proxy.inbound.HttpLocalRateLimit.Override
	(*HttpLocalRateLimit_Limit)(nil),                     // 27: io.linkerd.proxy.inbound.HttpLocalRateLimit.Limit
	(*HttpLocalRateLimit_Override_ClientIdentities)(nil), // 28: io.linkerd.proxy.inbound.HttpLocalRateLimit.Override.ClientIdentities
	(*net.IPAddress)(nil),                                // 29: io.linkerd.proxy.net.IPAddress
	(*meta.Metadata)(nil),                                // 30: io.linkerd.proxy.meta.Metadata
	(*net.IPNetwork)(nil),                                // 31: io.linkerd.proxy.net.IPNetwork
	(*http_route.HostMatch)(nil),                         // 32: io.linkerd.proxy.http_route.HostMatch
	(*duration.Duration)(nil),                            // 33: google.protobuf.Duration
	(*http_route.HttpRouteMatch)(nil),                    // 34: io.linkerd.proxy.http_route.HttpRouteMatch
	(*http_route.HttpFailureInjector)(nil),               // 35: io.linkerd.proxy.http_route.HttpFailureInjector
	(*http_route.RequestHeaderModifier)(nil),             // 36: io.linkerd.proxy.http_route.RequestHeaderModifier
	(*http_route.RequestRedirect)(nil),                   // 37: io.linkerd.proxy.http_route.RequestRedirect
	(*grpc_route.GrpcRouteMatch)(nil),                    // 38: io.linkerd.proxy.grpc_route.GrpcRouteMatch
	(*grpc_route.GrpcFailureInjector)(nil),               // 39: io.linkerd.proxy.grpc_route.GrpcFailureInjector
}
var file_inbound_proto_depIdxs = []int32{
	2,  // 0: io.linkerd.proxy.inbound.Server.protocol:type_name -> io.linkerd.proxy.inbound.ProxyProtocol
	29, // 1: io.linkerd.proxy.inbound.Server.server_ips:type_name -> io.linkerd.proxy.net.IPAddress
	3,  // 2: io.linkerd.proxy.inbound.Server.authorizations:type_name -> io.linkerd.proxy.inbound.Authz
	11, // 3: io.linkerd.proxy.inbound.Server.labels:type_name -> io.linkerd.proxy.inbound.Server.LabelsEntry
	12, // 4: io.linkerd.proxy.inbound.ProxyProtocol.detect:type_name -> io.linkerd.proxy.inbound.ProxyProtocol.Detect
	16, // 5: io.linkerd.proxy.inbound.ProxyProtocol.opaque:type_name -> io.linkerd.proxy.inbound.ProxyProtocol.Opaque
	17, // 6: io.linkerd.proxy.inbound.ProxyProtocol.tls:type_name -> io.linkerd.proxy.inbound.ProxyProtocol.Tls
	13, // 7: io.linkerd.proxy.inbound.ProxyProtocol.http1:type_name -> io.linkerd.proxy.inbound.ProxyProtocol.Http1
	14, // 8: io.linkerd.proxy.inbound.ProxyProtocol.http2:type_name -> io.linkerd.proxy.inbound.ProxyProtocol.Http2
	15, // 9: io.linkerd.proxy.inbound.ProxyProtocol.grpc:type_name -> io.linkerd.proxy.inbound.ProxyProtocol.Grpc
	4,  // 10: io.linkerd.proxy.inbound.Authz.networks:type_name -> io.linkerd.proxy.inbound.Network
	5,  // 11: io.linkerd.proxy.inbound.Authz.authentication:type_name -> io.linkerd.proxy.inbound.Authn
	18, // 12: io.linkerd.proxy.inbound.Authz.labels:type_name -> io.linkerd.proxy.inbound.Authz.LabelsEntry
	30, // 13: io.linkerd.proxy.inbound.Authz.metadata:type_name -> io.linkerd.proxy.meta.Metadata
	31, // 14: io.linkerd.proxy.inbound.Network.net:type_name -> io.linkerd.proxy.net.IPNetwork
	31, // 15: io.linkerd.proxy.inbound.Network.except:type_name -> io.linkerd.proxy.net.IPNetwork
	19, // 16: io.linkerd.proxy.inbound.Authn.unauthenticated:type_name -> io.linkerd.proxy.inbound.Authn.PermitUnauthenticated
	20, // 17: io.linkerd.proxy.inbound.Authn.meshTLS:type_name -> io.linkerd.proxy.inbound.Authn.PermitMeshTLS
	30, // 18: io.linkerd.proxy.inbound.HttpRoute.metadata:type_name -> io.linkerd.proxy.meta.Metadata
	32, // 19: io.linkerd.proxy.inbound.HttpRoute.hosts:type_name -> io.linkerd.proxy.http_route.HostMatch
	3,  // 20: io.linkerd.proxy.inbound.HttpRoute.authorizations:type_name -> io.linkerd.proxy.inbound.Authz
	22, // 21: io.linkerd.proxy.inbound.HttpRoute.rules:type_name -> io.linkerd.proxy.inbound.HttpRoute.Rule
	30, // 22: io.linkerd.proxy.inbound.GrpcRoute.metadata:type_name -> io.linkerd.proxy.meta.Metadata
	32, // 23: io.linkerd.proxy.inbound.GrpcRoute.hosts:type_name -> io.linkerd.proxy.http_route.HostMatch
	3,  // 24: io.linkerd.proxy.inbound.GrpcRoute.authorizations:type_name -> io.linkerd.proxy.inbound.Authz
	24, // 25: io.linkerd.proxy.inbound.GrpcRoute.rules:type_name -> io.linkerd.proxy.inbound.GrpcRoute.Rule
	30, // 26: io.linkerd.proxy.inbound.HttpLocalRateLimit.metadata:type_name -> io.linkerd.proxy.meta.Metadata
	27, // 27: io.linkerd.proxy.inbound.HttpLocalRateLimit.total:type_name -> io.linkerd.proxy.inbound.HttpLocalRateLimit.Limit
	27, // 28: io.linkerd.proxy.inbound.HttpLocalRateLimit.identity:type_name -> io.linkerd.proxy.inbound.HttpLocalRateLimit.Limit
	26, // 29: io.linkerd.proxy.inbound.HttpLocalRateLimit.overrides:type_name -> io.linkerd.proxy.inbound.HttpLocalRateLimit.Override
	33, // 30: io.linkerd.proxy.inbound.ProxyProtocol.Detect.timeout:type_name -> google.protobuf.Duration
	8,  // 31: io.linkerd.proxy.inbound.ProxyProtocol.Detect.http_routes:type_name -> io.linkerd.proxy.inbound.HttpRoute
	10, // 32: io.linkerd.proxy.inbound.ProxyProtocol.Detect.http_local_rate_limit:type_name -> io.linkerd.proxy.inbound.HttpLocalRateLimit
	8,  // 33: io.linkerd.proxy.inbound.ProxyProtocol.Http1.routes:type_name -> io.linkerd.proxy.inbound.HttpRoute
	10, // 34: io.linkerd.proxy.inbound.ProxyProtocol.Http1.local_rate_limit:type_name -> io.linkerd.proxy.inbound.HttpLocalRateLimit
	8,  // 35: io.linkerd.proxy.inbound.ProxyProtocol.Http2.routes:type_name -> io.linkerd.proxy.inbound.HttpRoute
	10, // 36: io.linkerd.proxy.inbound.ProxyProtocol.Http2.local_rate_limit:type_name -> io.linkerd.proxy.inbound.HttpLocalRateLimit
	9,  // 37: io.linkerd.proxy.inbound.ProxyProtocol.Grpc.routes:type_name -> io.linkerd.proxy.inbound.GrpcRoute
	19, // 38: io.linkerd.proxy.inbound.Authn.PermitMeshTLS.unauthenticated:type_name -> io.linkerd.proxy.inbound.Authn.PermitUnauthenticated
	21, // 39: io.linkerd.proxy.inbound.Authn.PermitMeshTLS.identities:type_name -> io.linkerd.proxy.inbound.Authn.PermitMeshTLS.PermitClientIdentities
	6,  // 40: io.linkerd.proxy.inbound.Authn.PermitMeshTLS.PermitClientIdentities.identities:type_name -> io.linkerd.proxy.inbound.Identity
	7,  // 41: io.linkerd.proxy.inbound.Authn.PermitMeshTLS.PermitClientIdentities.suffixes:type_name -> io.linkerd.proxy.inbound.IdentitySuffix
	34, // 42: io.linkerd.proxy.inbound.HttpRoute.Rule.matches:type_name -> io.linkerd.proxy.http_route.HttpRouteMatch
	23, // 43: io.linkerd.proxy.inbound.HttpRoute.Rule.filters:type_name -> io.linkerd.proxy.inbound.HttpRoute.Filter
	35, // 44: io.linkerd.proxy.inbound.HttpRoute.Filter.failure_injector:type_name -> io.linkerd.proxy.http_route.HttpFailureInjector
	36, // 45: io.linkerd.proxy.inbound.HttpRoute.Filter.request_header_modifier:type_name -> io.linkerd.proxy.http_route.RequestHeaderModifier
	37, // 46: io.linkerd.proxy.inbound.HttpRoute.Filter.redirect:type_name -> io.linkerd.proxy.http_route.RequestRedirect
	38, // 47: io.linkerd.proxy.inbound.GrpcRoute.Rule.matches:type_name -> io.linkerd.proxy.grpc_route.GrpcRouteMatch
	25, // 48: io.linkerd.proxy.inbound.GrpcRoute.Rule.filters:type_name -> io.linkerd.proxy.inbound.GrpcRoute.Filter
	39, // 49: io.linkerd.proxy.inbound.GrpcRoute.Filter.failure_injector:type_name -> io.linkerd.proxy.grpc_route.GrpcFailureInjector
	36, // 50: io.linkerd.proxy.inbound.GrpcRoute.Filter.request_header_modifier:type_name -> io.linkerd.proxy.http_route.RequestHeaderModifier
	27, // 51: io.linkerd.proxy.inbound.HttpLocalRateLimit.Override.limit:type_name -> io.linkerd.proxy.inbound.HttpLocalRateLimit.Limit
	28, // 52: io.linkerd.proxy.inbound.HttpLocalRateLimit.Override.clients:type_name -> io.linkerd.proxy.inbound.HttpLocalRateLimit.Override.ClientIdentities
	6,  // 53: io.linkerd.proxy.inbound.HttpLocalRateLimit.Override.ClientIdentities.identities:type_name -> io.linkerd.proxy.inbound.Identity
	0,  // 54: io.linkerd.proxy.inbound.InboundServerPolicies.GetPort:input_type -> io.linkerd.proxy.inbound.PortSpec
	0,  // 55: io.linkerd.proxy.inbound.InboundServerPolicies.WatchPort:input_type -> io.linkerd.proxy.inbound.PortSpec
	1,  // 56: io.linkerd.proxy.inbound.InboundServerPolicies.GetPort:output_type -> io.linkerd.proxy.inbound.Server
	1,  // 57: io.linkerd.proxy.inbound.InboundServerPolicies.WatchPort:output_type -> io.linkerd.proxy.inbound.Server
	56, // [56:58] is the sub-list for method output_type
	54, // [54:56] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_inbound_proto_init() }
func file_inbound_proto_init() {
	if File_inbound_proto != nil {
		return
	}
	file_inbound_proto_msgTypes[2].OneofWrappers = []any{
		(*ProxyProtocol_Detect_)(nil),
		(*ProxyProtocol_Opaque_)(nil),
		(*ProxyProtocol_Tls_)(nil),
		(*ProxyProtocol_Http1_)(nil),
		(*ProxyProtocol_Http2_)(nil),
		(*ProxyProtocol_Grpc_)(nil),
	}
	file_inbound_proto_msgTypes[5].OneofWrappers = []any{
		(*Authn_Unauthenticated)(nil),
		(*Authn_MeshTLS)(nil),
	}
	file_inbound_proto_msgTypes[20].OneofWrappers = []any{
		(*Authn_PermitMeshTLS_Unauthenticated)(nil),
		(*Authn_PermitMeshTLS_Identities)(nil),
	}
	file_inbound_proto_msgTypes[23].OneofWrappers = []any{
		(*HttpRoute_Filter_FailureInjector)(nil),
		(*HttpRoute_Filter_RequestHeaderModifier)(nil),
		(*HttpRoute_Filter_Redirect)(nil),
	}
	file_inbound_proto_msgTypes[25].OneofWrappers = []any{
		(*GrpcRoute_Filter_FailureInjector)(nil),
		(*GrpcRoute_Filter_RequestHeaderModifier)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_inbound_proto_rawDesc), len(file_inbound_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inbound_proto_goTypes,
		DependencyIndexes: file_inbound_proto_depIdxs,
		MessageInfos:      file_inbound_proto_msgTypes,
	}.Build()
	File_inbound_proto = out.File
	file_inbound_proto_goTypes = nil
	file_inbound_proto_depIdxs = nil
}
