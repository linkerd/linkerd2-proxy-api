// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.30.2
// source: tls_route.proto

package tls_route

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes how to match an `SNI` ClientHello extension.
type SniMatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Match:
	//
	//	*SniMatch_Exact
	//	*SniMatch_Suffix_
	Match         isSniMatch_Match `protobuf_oneof:"match"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SniMatch) Reset() {
	*x = SniMatch{}
	mi := &file_tls_route_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SniMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SniMatch) ProtoMessage() {}

func (x *SniMatch) ProtoReflect() protoreflect.Message {
	mi := &file_tls_route_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SniMatch.ProtoReflect.Descriptor instead.
func (*SniMatch) Descriptor() ([]byte, []int) {
	return file_tls_route_proto_rawDescGZIP(), []int{0}
}

func (x *SniMatch) GetMatch() isSniMatch_Match {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *SniMatch) GetExact() string {
	if x != nil {
		if x, ok := x.Match.(*SniMatch_Exact); ok {
			return x.Exact
		}
	}
	return ""
}

func (x *SniMatch) GetSuffix() *SniMatch_Suffix {
	if x != nil {
		if x, ok := x.Match.(*SniMatch_Suffix_); ok {
			return x.Suffix
		}
	}
	return nil
}

type isSniMatch_Match interface {
	isSniMatch_Match()
}

type SniMatch_Exact struct {
	// Match an exact SNI, e.g. www.example.com.
	Exact string `protobuf:"bytes,1,opt,name=exact,proto3,oneof"`
}

type SniMatch_Suffix_ struct {
	// Match a SNI as a wildcard suffix, e.g. *.example.com.
	Suffix *SniMatch_Suffix `protobuf:"bytes,2,opt,name=suffix,proto3,oneof"`
}

func (*SniMatch_Exact) isSniMatch_Match() {}

func (*SniMatch_Suffix_) isSniMatch_Match() {}

// A match like `*.example.com` is encoded as [com, example].
type SniMatch_Suffix struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReverseLabels []string               `protobuf:"bytes,1,rep,name=reverse_labels,json=reverseLabels,proto3" json:"reverse_labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SniMatch_Suffix) Reset() {
	*x = SniMatch_Suffix{}
	mi := &file_tls_route_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SniMatch_Suffix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SniMatch_Suffix) ProtoMessage() {}

func (x *SniMatch_Suffix) ProtoReflect() protoreflect.Message {
	mi := &file_tls_route_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SniMatch_Suffix.ProtoReflect.Descriptor instead.
func (*SniMatch_Suffix) Descriptor() ([]byte, []int) {
	return file_tls_route_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SniMatch_Suffix) GetReverseLabels() []string {
	if x != nil {
		return x.ReverseLabels
	}
	return nil
}

var File_tls_route_proto protoreflect.FileDescriptor

const file_tls_route_proto_rawDesc = "" +
	"\n" +
	"\x0ftls_route.proto\x12\x1aio.linkerd.proxy.tls_route\"\xa3\x01\n" +
	"\bSniMatch\x12\x16\n" +
	"\x05exact\x18\x01 \x01(\tH\x00R\x05exact\x12E\n" +
	"\x06suffix\x18\x02 \x01(\v2+.io.linkerd.proxy.tls_route.SniMatch.SuffixH\x00R\x06suffix\x1a/\n" +
	"\x06Suffix\x12%\n" +
	"\x0ereverse_labels\x18\x01 \x03(\tR\rreverseLabelsB\a\n" +
	"\x05matchB4Z2github.com/linkerd/linkerd2-proxy-api/go/tls_routeb\x06proto3"

var (
	file_tls_route_proto_rawDescOnce sync.Once
	file_tls_route_proto_rawDescData []byte
)

func file_tls_route_proto_rawDescGZIP() []byte {
	file_tls_route_proto_rawDescOnce.Do(func() {
		file_tls_route_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tls_route_proto_rawDesc), len(file_tls_route_proto_rawDesc)))
	})
	return file_tls_route_proto_rawDescData
}

var file_tls_route_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tls_route_proto_goTypes = []any{
	(*SniMatch)(nil),        // 0: io.linkerd.proxy.tls_route.SniMatch
	(*SniMatch_Suffix)(nil), // 1: io.linkerd.proxy.tls_route.SniMatch.Suffix
}
var file_tls_route_proto_depIdxs = []int32{
	1, // 0: io.linkerd.proxy.tls_route.SniMatch.suffix:type_name -> io.linkerd.proxy.tls_route.SniMatch.Suffix
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tls_route_proto_init() }
func file_tls_route_proto_init() {
	if File_tls_route_proto != nil {
		return
	}
	file_tls_route_proto_msgTypes[0].OneofWrappers = []any{
		(*SniMatch_Exact)(nil),
		(*SniMatch_Suffix_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tls_route_proto_rawDesc), len(file_tls_route_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tls_route_proto_goTypes,
		DependencyIndexes: file_tls_route_proto_depIdxs,
		MessageInfos:      file_tls_route_proto_msgTypes,
	}.Build()
	File_tls_route_proto = out.File
	file_tls_route_proto_goTypes = nil
	file_tls_route_proto_depIdxs = nil
}
