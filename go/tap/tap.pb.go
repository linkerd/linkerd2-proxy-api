// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tap.proto

package tap // import "github.com/linkerd/linkerd2-proxy-api/go/tap"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import http_types "github.com/linkerd/linkerd2-proxy-api/go/http_types"
import net "github.com/linkerd/linkerd2-proxy-api/go/net"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TapEvent_ProxyDirection int32

const (
	TapEvent_UNKNOWN  TapEvent_ProxyDirection = 0
	TapEvent_INBOUND  TapEvent_ProxyDirection = 1
	TapEvent_OUTBOUND TapEvent_ProxyDirection = 2
)

var TapEvent_ProxyDirection_name = map[int32]string{
	0: "UNKNOWN",
	1: "INBOUND",
	2: "OUTBOUND",
}
var TapEvent_ProxyDirection_value = map[string]int32{
	"UNKNOWN":  0,
	"INBOUND":  1,
	"OUTBOUND": 2,
}

func (x TapEvent_ProxyDirection) String() string {
	return proto.EnumName(TapEvent_ProxyDirection_name, int32(x))
}
func (TapEvent_ProxyDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{2, 0}
}

type ObserveRequest struct {
	// Limits the number of event keys that will be returned by this tap.
	Limit uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Encodes request-matching logic.
	Match                *ObserveRequest_Match `protobuf:"bytes,2,opt,name=match,proto3" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ObserveRequest) Reset()         { *m = ObserveRequest{} }
func (m *ObserveRequest) String() string { return proto.CompactTextString(m) }
func (*ObserveRequest) ProtoMessage()    {}
func (*ObserveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{0}
}
func (m *ObserveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveRequest.Unmarshal(m, b)
}
func (m *ObserveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveRequest.Marshal(b, m, deterministic)
}
func (dst *ObserveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveRequest.Merge(dst, src)
}
func (m *ObserveRequest) XXX_Size() int {
	return xxx_messageInfo_ObserveRequest.Size(m)
}
func (m *ObserveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveRequest proto.InternalMessageInfo

func (m *ObserveRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ObserveRequest) GetMatch() *ObserveRequest_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

type ObserveRequest_Match struct {
	// Types that are valid to be assigned to Match:
	//	*ObserveRequest_Match_All
	//	*ObserveRequest_Match_Any
	//	*ObserveRequest_Match_Not
	//	*ObserveRequest_Match_Source
	//	*ObserveRequest_Match_Destination
	//	*ObserveRequest_Match_Http_
	//	*ObserveRequest_Match_DestinationLabel
	Match                isObserveRequest_Match_Match `protobuf_oneof:"match"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ObserveRequest_Match) Reset()         { *m = ObserveRequest_Match{} }
func (m *ObserveRequest_Match) String() string { return proto.CompactTextString(m) }
func (*ObserveRequest_Match) ProtoMessage()    {}
func (*ObserveRequest_Match) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{0, 0}
}
func (m *ObserveRequest_Match) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveRequest_Match.Unmarshal(m, b)
}
func (m *ObserveRequest_Match) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveRequest_Match.Marshal(b, m, deterministic)
}
func (dst *ObserveRequest_Match) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveRequest_Match.Merge(dst, src)
}
func (m *ObserveRequest_Match) XXX_Size() int {
	return xxx_messageInfo_ObserveRequest_Match.Size(m)
}
func (m *ObserveRequest_Match) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveRequest_Match.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveRequest_Match proto.InternalMessageInfo

type isObserveRequest_Match_Match interface {
	isObserveRequest_Match_Match()
}

type ObserveRequest_Match_All struct {
	All *ObserveRequest_Match_Seq `protobuf:"bytes,1,opt,name=all,proto3,oneof"`
}

type ObserveRequest_Match_Any struct {
	Any *ObserveRequest_Match_Seq `protobuf:"bytes,2,opt,name=any,proto3,oneof"`
}

type ObserveRequest_Match_Not struct {
	Not *ObserveRequest_Match `protobuf:"bytes,3,opt,name=not,proto3,oneof"`
}

type ObserveRequest_Match_Source struct {
	Source *ObserveRequest_Match_Tcp `protobuf:"bytes,4,opt,name=source,proto3,oneof"`
}

type ObserveRequest_Match_Destination struct {
	Destination *ObserveRequest_Match_Tcp `protobuf:"bytes,5,opt,name=destination,proto3,oneof"`
}

type ObserveRequest_Match_Http_ struct {
	Http *ObserveRequest_Match_Http `protobuf:"bytes,6,opt,name=http,proto3,oneof"`
}

type ObserveRequest_Match_DestinationLabel struct {
	DestinationLabel *ObserveRequest_Match_Label `protobuf:"bytes,7,opt,name=destination_label,json=destinationLabel,proto3,oneof"`
}

func (*ObserveRequest_Match_All) isObserveRequest_Match_Match() {}

func (*ObserveRequest_Match_Any) isObserveRequest_Match_Match() {}

func (*ObserveRequest_Match_Not) isObserveRequest_Match_Match() {}

func (*ObserveRequest_Match_Source) isObserveRequest_Match_Match() {}

func (*ObserveRequest_Match_Destination) isObserveRequest_Match_Match() {}

func (*ObserveRequest_Match_Http_) isObserveRequest_Match_Match() {}

func (*ObserveRequest_Match_DestinationLabel) isObserveRequest_Match_Match() {}

func (m *ObserveRequest_Match) GetMatch() isObserveRequest_Match_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *ObserveRequest_Match) GetAll() *ObserveRequest_Match_Seq {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_All); ok {
		return x.All
	}
	return nil
}

func (m *ObserveRequest_Match) GetAny() *ObserveRequest_Match_Seq {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Any); ok {
		return x.Any
	}
	return nil
}

func (m *ObserveRequest_Match) GetNot() *ObserveRequest_Match {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Not); ok {
		return x.Not
	}
	return nil
}

func (m *ObserveRequest_Match) GetSource() *ObserveRequest_Match_Tcp {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Source); ok {
		return x.Source
	}
	return nil
}

func (m *ObserveRequest_Match) GetDestination() *ObserveRequest_Match_Tcp {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Destination); ok {
		return x.Destination
	}
	return nil
}

func (m *ObserveRequest_Match) GetHttp() *ObserveRequest_Match_Http {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Http_); ok {
		return x.Http
	}
	return nil
}

func (m *ObserveRequest_Match) GetDestinationLabel() *ObserveRequest_Match_Label {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_DestinationLabel); ok {
		return x.DestinationLabel
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ObserveRequest_Match) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ObserveRequest_Match_OneofMarshaler, _ObserveRequest_Match_OneofUnmarshaler, _ObserveRequest_Match_OneofSizer, []interface{}{
		(*ObserveRequest_Match_All)(nil),
		(*ObserveRequest_Match_Any)(nil),
		(*ObserveRequest_Match_Not)(nil),
		(*ObserveRequest_Match_Source)(nil),
		(*ObserveRequest_Match_Destination)(nil),
		(*ObserveRequest_Match_Http_)(nil),
		(*ObserveRequest_Match_DestinationLabel)(nil),
	}
}

func _ObserveRequest_Match_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ObserveRequest_Match)
	// match
	switch x := m.Match.(type) {
	case *ObserveRequest_Match_All:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.All); err != nil {
			return err
		}
	case *ObserveRequest_Match_Any:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Any); err != nil {
			return err
		}
	case *ObserveRequest_Match_Not:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Not); err != nil {
			return err
		}
	case *ObserveRequest_Match_Source:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Source); err != nil {
			return err
		}
	case *ObserveRequest_Match_Destination:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Destination); err != nil {
			return err
		}
	case *ObserveRequest_Match_Http_:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Http); err != nil {
			return err
		}
	case *ObserveRequest_Match_DestinationLabel:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DestinationLabel); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ObserveRequest_Match.Match has unexpected type %T", x)
	}
	return nil
}

func _ObserveRequest_Match_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ObserveRequest_Match)
	switch tag {
	case 1: // match.all
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match_Seq)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_All{msg}
		return true, err
	case 2: // match.any
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match_Seq)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Any{msg}
		return true, err
	case 3: // match.not
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Not{msg}
		return true, err
	case 4: // match.source
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match_Tcp)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Source{msg}
		return true, err
	case 5: // match.destination
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match_Tcp)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Destination{msg}
		return true, err
	case 6: // match.http
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match_Http)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Http_{msg}
		return true, err
	case 7: // match.destination_label
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match_Label)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_DestinationLabel{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ObserveRequest_Match_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ObserveRequest_Match)
	// match
	switch x := m.Match.(type) {
	case *ObserveRequest_Match_All:
		s := proto.Size(x.All)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObserveRequest_Match_Any:
		s := proto.Size(x.Any)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObserveRequest_Match_Not:
		s := proto.Size(x.Not)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObserveRequest_Match_Source:
		s := proto.Size(x.Source)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObserveRequest_Match_Destination:
		s := proto.Size(x.Destination)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObserveRequest_Match_Http_:
		s := proto.Size(x.Http)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObserveRequest_Match_DestinationLabel:
		s := proto.Size(x.DestinationLabel)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ObserveRequest_Match_Seq struct {
	Matches              []*ObserveRequest_Match `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ObserveRequest_Match_Seq) Reset()         { *m = ObserveRequest_Match_Seq{} }
func (m *ObserveRequest_Match_Seq) String() string { return proto.CompactTextString(m) }
func (*ObserveRequest_Match_Seq) ProtoMessage()    {}
func (*ObserveRequest_Match_Seq) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{0, 0, 0}
}
func (m *ObserveRequest_Match_Seq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveRequest_Match_Seq.Unmarshal(m, b)
}
func (m *ObserveRequest_Match_Seq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveRequest_Match_Seq.Marshal(b, m, deterministic)
}
func (dst *ObserveRequest_Match_Seq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveRequest_Match_Seq.Merge(dst, src)
}
func (m *ObserveRequest_Match_Seq) XXX_Size() int {
	return xxx_messageInfo_ObserveRequest_Match_Seq.Size(m)
}
func (m *ObserveRequest_Match_Seq) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveRequest_Match_Seq.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveRequest_Match_Seq proto.InternalMessageInfo

func (m *ObserveRequest_Match_Seq) GetMatches() []*ObserveRequest_Match {
	if m != nil {
		return m.Matches
	}
	return nil
}

type ObserveRequest_Match_Label struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObserveRequest_Match_Label) Reset()         { *m = ObserveRequest_Match_Label{} }
func (m *ObserveRequest_Match_Label) String() string { return proto.CompactTextString(m) }
func (*ObserveRequest_Match_Label) ProtoMessage()    {}
func (*ObserveRequest_Match_Label) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{0, 0, 1}
}
func (m *ObserveRequest_Match_Label) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveRequest_Match_Label.Unmarshal(m, b)
}
func (m *ObserveRequest_Match_Label) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveRequest_Match_Label.Marshal(b, m, deterministic)
}
func (dst *ObserveRequest_Match_Label) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveRequest_Match_Label.Merge(dst, src)
}
func (m *ObserveRequest_Match_Label) XXX_Size() int {
	return xxx_messageInfo_ObserveRequest_Match_Label.Size(m)
}
func (m *ObserveRequest_Match_Label) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveRequest_Match_Label.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveRequest_Match_Label proto.InternalMessageInfo

func (m *ObserveRequest_Match_Label) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ObserveRequest_Match_Label) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ObserveRequest_Match_Tcp struct {
	// Types that are valid to be assigned to Match:
	//	*ObserveRequest_Match_Tcp_Netmask_
	//	*ObserveRequest_Match_Tcp_Ports
	Match                isObserveRequest_Match_Tcp_Match `protobuf_oneof:"match"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ObserveRequest_Match_Tcp) Reset()         { *m = ObserveRequest_Match_Tcp{} }
func (m *ObserveRequest_Match_Tcp) String() string { return proto.CompactTextString(m) }
func (*ObserveRequest_Match_Tcp) ProtoMessage()    {}
func (*ObserveRequest_Match_Tcp) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{0, 0, 2}
}
func (m *ObserveRequest_Match_Tcp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveRequest_Match_Tcp.Unmarshal(m, b)
}
func (m *ObserveRequest_Match_Tcp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveRequest_Match_Tcp.Marshal(b, m, deterministic)
}
func (dst *ObserveRequest_Match_Tcp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveRequest_Match_Tcp.Merge(dst, src)
}
func (m *ObserveRequest_Match_Tcp) XXX_Size() int {
	return xxx_messageInfo_ObserveRequest_Match_Tcp.Size(m)
}
func (m *ObserveRequest_Match_Tcp) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveRequest_Match_Tcp.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveRequest_Match_Tcp proto.InternalMessageInfo

type isObserveRequest_Match_Tcp_Match interface {
	isObserveRequest_Match_Tcp_Match()
}

type ObserveRequest_Match_Tcp_Netmask_ struct {
	Netmask *ObserveRequest_Match_Tcp_Netmask `protobuf:"bytes,1,opt,name=netmask,proto3,oneof"`
}

type ObserveRequest_Match_Tcp_Ports struct {
	Ports *ObserveRequest_Match_Tcp_PortRange `protobuf:"bytes,3,opt,name=ports,proto3,oneof"`
}

func (*ObserveRequest_Match_Tcp_Netmask_) isObserveRequest_Match_Tcp_Match() {}

func (*ObserveRequest_Match_Tcp_Ports) isObserveRequest_Match_Tcp_Match() {}

func (m *ObserveRequest_Match_Tcp) GetMatch() isObserveRequest_Match_Tcp_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *ObserveRequest_Match_Tcp) GetNetmask() *ObserveRequest_Match_Tcp_Netmask {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Tcp_Netmask_); ok {
		return x.Netmask
	}
	return nil
}

func (m *ObserveRequest_Match_Tcp) GetPorts() *ObserveRequest_Match_Tcp_PortRange {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Tcp_Ports); ok {
		return x.Ports
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ObserveRequest_Match_Tcp) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ObserveRequest_Match_Tcp_OneofMarshaler, _ObserveRequest_Match_Tcp_OneofUnmarshaler, _ObserveRequest_Match_Tcp_OneofSizer, []interface{}{
		(*ObserveRequest_Match_Tcp_Netmask_)(nil),
		(*ObserveRequest_Match_Tcp_Ports)(nil),
	}
}

func _ObserveRequest_Match_Tcp_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ObserveRequest_Match_Tcp)
	// match
	switch x := m.Match.(type) {
	case *ObserveRequest_Match_Tcp_Netmask_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Netmask); err != nil {
			return err
		}
	case *ObserveRequest_Match_Tcp_Ports:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ports); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ObserveRequest_Match_Tcp.Match has unexpected type %T", x)
	}
	return nil
}

func _ObserveRequest_Match_Tcp_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ObserveRequest_Match_Tcp)
	switch tag {
	case 1: // match.netmask
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match_Tcp_Netmask)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Tcp_Netmask_{msg}
		return true, err
	case 3: // match.ports
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match_Tcp_PortRange)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Tcp_Ports{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ObserveRequest_Match_Tcp_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ObserveRequest_Match_Tcp)
	// match
	switch x := m.Match.(type) {
	case *ObserveRequest_Match_Tcp_Netmask_:
		s := proto.Size(x.Netmask)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObserveRequest_Match_Tcp_Ports:
		s := proto.Size(x.Ports)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ObserveRequest_Match_Tcp_Netmask struct {
	Ip                   *net.IPAddress `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Mask                 uint32         `protobuf:"varint,2,opt,name=mask,proto3" json:"mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ObserveRequest_Match_Tcp_Netmask) Reset()         { *m = ObserveRequest_Match_Tcp_Netmask{} }
func (m *ObserveRequest_Match_Tcp_Netmask) String() string { return proto.CompactTextString(m) }
func (*ObserveRequest_Match_Tcp_Netmask) ProtoMessage()    {}
func (*ObserveRequest_Match_Tcp_Netmask) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{0, 0, 2, 0}
}
func (m *ObserveRequest_Match_Tcp_Netmask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveRequest_Match_Tcp_Netmask.Unmarshal(m, b)
}
func (m *ObserveRequest_Match_Tcp_Netmask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveRequest_Match_Tcp_Netmask.Marshal(b, m, deterministic)
}
func (dst *ObserveRequest_Match_Tcp_Netmask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveRequest_Match_Tcp_Netmask.Merge(dst, src)
}
func (m *ObserveRequest_Match_Tcp_Netmask) XXX_Size() int {
	return xxx_messageInfo_ObserveRequest_Match_Tcp_Netmask.Size(m)
}
func (m *ObserveRequest_Match_Tcp_Netmask) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveRequest_Match_Tcp_Netmask.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveRequest_Match_Tcp_Netmask proto.InternalMessageInfo

func (m *ObserveRequest_Match_Tcp_Netmask) GetIp() *net.IPAddress {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *ObserveRequest_Match_Tcp_Netmask) GetMask() uint32 {
	if m != nil {
		return m.Mask
	}
	return 0
}

// If either a minimum or maximum is not specified, the range is considered to be
// over a discrete value.
type ObserveRequest_Match_Tcp_PortRange struct {
	// Minimum matching port value (inclusive), if specified.
	Min uint32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum matching port value (inclusive), if specified.
	Max                  uint32   `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObserveRequest_Match_Tcp_PortRange) Reset()         { *m = ObserveRequest_Match_Tcp_PortRange{} }
func (m *ObserveRequest_Match_Tcp_PortRange) String() string { return proto.CompactTextString(m) }
func (*ObserveRequest_Match_Tcp_PortRange) ProtoMessage()    {}
func (*ObserveRequest_Match_Tcp_PortRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{0, 0, 2, 1}
}
func (m *ObserveRequest_Match_Tcp_PortRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveRequest_Match_Tcp_PortRange.Unmarshal(m, b)
}
func (m *ObserveRequest_Match_Tcp_PortRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveRequest_Match_Tcp_PortRange.Marshal(b, m, deterministic)
}
func (dst *ObserveRequest_Match_Tcp_PortRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveRequest_Match_Tcp_PortRange.Merge(dst, src)
}
func (m *ObserveRequest_Match_Tcp_PortRange) XXX_Size() int {
	return xxx_messageInfo_ObserveRequest_Match_Tcp_PortRange.Size(m)
}
func (m *ObserveRequest_Match_Tcp_PortRange) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveRequest_Match_Tcp_PortRange.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveRequest_Match_Tcp_PortRange proto.InternalMessageInfo

func (m *ObserveRequest_Match_Tcp_PortRange) GetMin() uint32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *ObserveRequest_Match_Tcp_PortRange) GetMax() uint32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type ObserveRequest_Match_Http struct {
	// Types that are valid to be assigned to Match:
	//	*ObserveRequest_Match_Http_Scheme
	//	*ObserveRequest_Match_Http_Method
	//	*ObserveRequest_Match_Http_Authority
	//	*ObserveRequest_Match_Http_Path
	Match                isObserveRequest_Match_Http_Match `protobuf_oneof:"match"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ObserveRequest_Match_Http) Reset()         { *m = ObserveRequest_Match_Http{} }
func (m *ObserveRequest_Match_Http) String() string { return proto.CompactTextString(m) }
func (*ObserveRequest_Match_Http) ProtoMessage()    {}
func (*ObserveRequest_Match_Http) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{0, 0, 3}
}
func (m *ObserveRequest_Match_Http) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveRequest_Match_Http.Unmarshal(m, b)
}
func (m *ObserveRequest_Match_Http) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveRequest_Match_Http.Marshal(b, m, deterministic)
}
func (dst *ObserveRequest_Match_Http) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveRequest_Match_Http.Merge(dst, src)
}
func (m *ObserveRequest_Match_Http) XXX_Size() int {
	return xxx_messageInfo_ObserveRequest_Match_Http.Size(m)
}
func (m *ObserveRequest_Match_Http) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveRequest_Match_Http.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveRequest_Match_Http proto.InternalMessageInfo

type isObserveRequest_Match_Http_Match interface {
	isObserveRequest_Match_Http_Match()
}

type ObserveRequest_Match_Http_Scheme struct {
	Scheme *http_types.Scheme `protobuf:"bytes,1,opt,name=scheme,proto3,oneof"`
}

type ObserveRequest_Match_Http_Method struct {
	Method *http_types.HttpMethod `protobuf:"bytes,3,opt,name=method,proto3,oneof"`
}

type ObserveRequest_Match_Http_Authority struct {
	Authority *ObserveRequest_Match_Http_StringMatch `protobuf:"bytes,2,opt,name=authority,proto3,oneof"`
}

type ObserveRequest_Match_Http_Path struct {
	Path *ObserveRequest_Match_Http_StringMatch `protobuf:"bytes,4,opt,name=path,proto3,oneof"`
}

func (*ObserveRequest_Match_Http_Scheme) isObserveRequest_Match_Http_Match() {}

func (*ObserveRequest_Match_Http_Method) isObserveRequest_Match_Http_Match() {}

func (*ObserveRequest_Match_Http_Authority) isObserveRequest_Match_Http_Match() {}

func (*ObserveRequest_Match_Http_Path) isObserveRequest_Match_Http_Match() {}

func (m *ObserveRequest_Match_Http) GetMatch() isObserveRequest_Match_Http_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *ObserveRequest_Match_Http) GetScheme() *http_types.Scheme {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Http_Scheme); ok {
		return x.Scheme
	}
	return nil
}

func (m *ObserveRequest_Match_Http) GetMethod() *http_types.HttpMethod {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Http_Method); ok {
		return x.Method
	}
	return nil
}

func (m *ObserveRequest_Match_Http) GetAuthority() *ObserveRequest_Match_Http_StringMatch {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Http_Authority); ok {
		return x.Authority
	}
	return nil
}

func (m *ObserveRequest_Match_Http) GetPath() *ObserveRequest_Match_Http_StringMatch {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Http_Path); ok {
		return x.Path
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ObserveRequest_Match_Http) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ObserveRequest_Match_Http_OneofMarshaler, _ObserveRequest_Match_Http_OneofUnmarshaler, _ObserveRequest_Match_Http_OneofSizer, []interface{}{
		(*ObserveRequest_Match_Http_Scheme)(nil),
		(*ObserveRequest_Match_Http_Method)(nil),
		(*ObserveRequest_Match_Http_Authority)(nil),
		(*ObserveRequest_Match_Http_Path)(nil),
	}
}

func _ObserveRequest_Match_Http_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ObserveRequest_Match_Http)
	// match
	switch x := m.Match.(type) {
	case *ObserveRequest_Match_Http_Scheme:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Scheme); err != nil {
			return err
		}
	case *ObserveRequest_Match_Http_Method:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Method); err != nil {
			return err
		}
	case *ObserveRequest_Match_Http_Authority:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Authority); err != nil {
			return err
		}
	case *ObserveRequest_Match_Http_Path:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Path); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ObserveRequest_Match_Http.Match has unexpected type %T", x)
	}
	return nil
}

func _ObserveRequest_Match_Http_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ObserveRequest_Match_Http)
	switch tag {
	case 1: // match.scheme
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(http_types.Scheme)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Http_Scheme{msg}
		return true, err
	case 3: // match.method
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(http_types.HttpMethod)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Http_Method{msg}
		return true, err
	case 2: // match.authority
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match_Http_StringMatch)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Http_Authority{msg}
		return true, err
	case 4: // match.path
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ObserveRequest_Match_Http_StringMatch)
		err := b.DecodeMessage(msg)
		m.Match = &ObserveRequest_Match_Http_Path{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ObserveRequest_Match_Http_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ObserveRequest_Match_Http)
	// match
	switch x := m.Match.(type) {
	case *ObserveRequest_Match_Http_Scheme:
		s := proto.Size(x.Scheme)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObserveRequest_Match_Http_Method:
		s := proto.Size(x.Method)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObserveRequest_Match_Http_Authority:
		s := proto.Size(x.Authority)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ObserveRequest_Match_Http_Path:
		s := proto.Size(x.Path)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ObserveRequest_Match_Http_StringMatch struct {
	// Types that are valid to be assigned to Match:
	//	*ObserveRequest_Match_Http_StringMatch_Exact
	//	*ObserveRequest_Match_Http_StringMatch_Prefix
	Match                isObserveRequest_Match_Http_StringMatch_Match `protobuf_oneof:"match"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *ObserveRequest_Match_Http_StringMatch) Reset()         { *m = ObserveRequest_Match_Http_StringMatch{} }
func (m *ObserveRequest_Match_Http_StringMatch) String() string { return proto.CompactTextString(m) }
func (*ObserveRequest_Match_Http_StringMatch) ProtoMessage()    {}
func (*ObserveRequest_Match_Http_StringMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{0, 0, 3, 0}
}
func (m *ObserveRequest_Match_Http_StringMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObserveRequest_Match_Http_StringMatch.Unmarshal(m, b)
}
func (m *ObserveRequest_Match_Http_StringMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObserveRequest_Match_Http_StringMatch.Marshal(b, m, deterministic)
}
func (dst *ObserveRequest_Match_Http_StringMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObserveRequest_Match_Http_StringMatch.Merge(dst, src)
}
func (m *ObserveRequest_Match_Http_StringMatch) XXX_Size() int {
	return xxx_messageInfo_ObserveRequest_Match_Http_StringMatch.Size(m)
}
func (m *ObserveRequest_Match_Http_StringMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_ObserveRequest_Match_Http_StringMatch.DiscardUnknown(m)
}

var xxx_messageInfo_ObserveRequest_Match_Http_StringMatch proto.InternalMessageInfo

type isObserveRequest_Match_Http_StringMatch_Match interface {
	isObserveRequest_Match_Http_StringMatch_Match()
}

type ObserveRequest_Match_Http_StringMatch_Exact struct {
	Exact string `protobuf:"bytes,1,opt,name=exact,proto3,oneof"`
}

type ObserveRequest_Match_Http_StringMatch_Prefix struct {
	Prefix string `protobuf:"bytes,2,opt,name=prefix,proto3,oneof"`
}

func (*ObserveRequest_Match_Http_StringMatch_Exact) isObserveRequest_Match_Http_StringMatch_Match() {}

func (*ObserveRequest_Match_Http_StringMatch_Prefix) isObserveRequest_Match_Http_StringMatch_Match() {}

func (m *ObserveRequest_Match_Http_StringMatch) GetMatch() isObserveRequest_Match_Http_StringMatch_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *ObserveRequest_Match_Http_StringMatch) GetExact() string {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Http_StringMatch_Exact); ok {
		return x.Exact
	}
	return ""
}

func (m *ObserveRequest_Match_Http_StringMatch) GetPrefix() string {
	if x, ok := m.GetMatch().(*ObserveRequest_Match_Http_StringMatch_Prefix); ok {
		return x.Prefix
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ObserveRequest_Match_Http_StringMatch) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ObserveRequest_Match_Http_StringMatch_OneofMarshaler, _ObserveRequest_Match_Http_StringMatch_OneofUnmarshaler, _ObserveRequest_Match_Http_StringMatch_OneofSizer, []interface{}{
		(*ObserveRequest_Match_Http_StringMatch_Exact)(nil),
		(*ObserveRequest_Match_Http_StringMatch_Prefix)(nil),
	}
}

func _ObserveRequest_Match_Http_StringMatch_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ObserveRequest_Match_Http_StringMatch)
	// match
	switch x := m.Match.(type) {
	case *ObserveRequest_Match_Http_StringMatch_Exact:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Exact)
	case *ObserveRequest_Match_Http_StringMatch_Prefix:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Prefix)
	case nil:
	default:
		return fmt.Errorf("ObserveRequest_Match_Http_StringMatch.Match has unexpected type %T", x)
	}
	return nil
}

func _ObserveRequest_Match_Http_StringMatch_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ObserveRequest_Match_Http_StringMatch)
	switch tag {
	case 1: // match.exact
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Match = &ObserveRequest_Match_Http_StringMatch_Exact{x}
		return true, err
	case 2: // match.prefix
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Match = &ObserveRequest_Match_Http_StringMatch_Prefix{x}
		return true, err
	default:
		return false, nil
	}
}

func _ObserveRequest_Match_Http_StringMatch_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ObserveRequest_Match_Http_StringMatch)
	// match
	switch x := m.Match.(type) {
	case *ObserveRequest_Match_Http_StringMatch_Exact:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Exact)))
		n += len(x.Exact)
	case *ObserveRequest_Match_Http_StringMatch_Prefix:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Prefix)))
		n += len(x.Prefix)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Eos struct {
	// Types that are valid to be assigned to End:
	//	*Eos_GrpcStatusCode
	//	*Eos_ResetErrorCode
	End                  isEos_End `protobuf_oneof:"end"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Eos) Reset()         { *m = Eos{} }
func (m *Eos) String() string { return proto.CompactTextString(m) }
func (*Eos) ProtoMessage()    {}
func (*Eos) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{1}
}
func (m *Eos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Eos.Unmarshal(m, b)
}
func (m *Eos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Eos.Marshal(b, m, deterministic)
}
func (dst *Eos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Eos.Merge(dst, src)
}
func (m *Eos) XXX_Size() int {
	return xxx_messageInfo_Eos.Size(m)
}
func (m *Eos) XXX_DiscardUnknown() {
	xxx_messageInfo_Eos.DiscardUnknown(m)
}

var xxx_messageInfo_Eos proto.InternalMessageInfo

type isEos_End interface {
	isEos_End()
}

type Eos_GrpcStatusCode struct {
	GrpcStatusCode uint32 `protobuf:"varint,1,opt,name=grpc_status_code,json=grpcStatusCode,proto3,oneof"`
}

type Eos_ResetErrorCode struct {
	ResetErrorCode uint32 `protobuf:"varint,2,opt,name=reset_error_code,json=resetErrorCode,proto3,oneof"`
}

func (*Eos_GrpcStatusCode) isEos_End() {}

func (*Eos_ResetErrorCode) isEos_End() {}

func (m *Eos) GetEnd() isEos_End {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Eos) GetGrpcStatusCode() uint32 {
	if x, ok := m.GetEnd().(*Eos_GrpcStatusCode); ok {
		return x.GrpcStatusCode
	}
	return 0
}

func (m *Eos) GetResetErrorCode() uint32 {
	if x, ok := m.GetEnd().(*Eos_ResetErrorCode); ok {
		return x.ResetErrorCode
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Eos) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Eos_OneofMarshaler, _Eos_OneofUnmarshaler, _Eos_OneofSizer, []interface{}{
		(*Eos_GrpcStatusCode)(nil),
		(*Eos_ResetErrorCode)(nil),
	}
}

func _Eos_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Eos)
	// end
	switch x := m.End.(type) {
	case *Eos_GrpcStatusCode:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.GrpcStatusCode))
	case *Eos_ResetErrorCode:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ResetErrorCode))
	case nil:
	default:
		return fmt.Errorf("Eos.End has unexpected type %T", x)
	}
	return nil
}

func _Eos_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Eos)
	switch tag {
	case 1: // end.grpc_status_code
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.End = &Eos_GrpcStatusCode{uint32(x)}
		return true, err
	case 2: // end.reset_error_code
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.End = &Eos_ResetErrorCode{uint32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _Eos_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Eos)
	// end
	switch x := m.End.(type) {
	case *Eos_GrpcStatusCode:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.GrpcStatusCode))
	case *Eos_ResetErrorCode:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.ResetErrorCode))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TapEvent struct {
	Source          *net.TcpAddress         `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	SourceMeta      *TapEvent_EndpointMeta  `protobuf:"bytes,5,opt,name=source_meta,json=sourceMeta,proto3" json:"source_meta,omitempty"`
	Destination     *net.TcpAddress         `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	DestinationMeta *TapEvent_EndpointMeta  `protobuf:"bytes,4,opt,name=destination_meta,json=destinationMeta,proto3" json:"destination_meta,omitempty"`
	ProxyDirection  TapEvent_ProxyDirection `protobuf:"varint,6,opt,name=proxy_direction,json=proxyDirection,proto3,enum=io.linkerd.proxy.tap.TapEvent_ProxyDirection" json:"proxy_direction,omitempty"`
	// Types that are valid to be assigned to Event:
	//	*TapEvent_Http_
	Event                isTapEvent_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TapEvent) Reset()         { *m = TapEvent{} }
func (m *TapEvent) String() string { return proto.CompactTextString(m) }
func (*TapEvent) ProtoMessage()    {}
func (*TapEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{2}
}
func (m *TapEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TapEvent.Unmarshal(m, b)
}
func (m *TapEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TapEvent.Marshal(b, m, deterministic)
}
func (dst *TapEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TapEvent.Merge(dst, src)
}
func (m *TapEvent) XXX_Size() int {
	return xxx_messageInfo_TapEvent.Size(m)
}
func (m *TapEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TapEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TapEvent proto.InternalMessageInfo

func (m *TapEvent) GetSource() *net.TcpAddress {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *TapEvent) GetSourceMeta() *TapEvent_EndpointMeta {
	if m != nil {
		return m.SourceMeta
	}
	return nil
}

func (m *TapEvent) GetDestination() *net.TcpAddress {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *TapEvent) GetDestinationMeta() *TapEvent_EndpointMeta {
	if m != nil {
		return m.DestinationMeta
	}
	return nil
}

func (m *TapEvent) GetProxyDirection() TapEvent_ProxyDirection {
	if m != nil {
		return m.ProxyDirection
	}
	return TapEvent_UNKNOWN
}

type isTapEvent_Event interface {
	isTapEvent_Event()
}

type TapEvent_Http_ struct {
	Http *TapEvent_Http `protobuf:"bytes,3,opt,name=http,proto3,oneof"`
}

func (*TapEvent_Http_) isTapEvent_Event() {}

func (m *TapEvent) GetEvent() isTapEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *TapEvent) GetHttp() *TapEvent_Http {
	if x, ok := m.GetEvent().(*TapEvent_Http_); ok {
		return x.Http
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TapEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TapEvent_OneofMarshaler, _TapEvent_OneofUnmarshaler, _TapEvent_OneofSizer, []interface{}{
		(*TapEvent_Http_)(nil),
	}
}

func _TapEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TapEvent)
	// event
	switch x := m.Event.(type) {
	case *TapEvent_Http_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Http); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TapEvent.Event has unexpected type %T", x)
	}
	return nil
}

func _TapEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TapEvent)
	switch tag {
	case 3: // event.http
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TapEvent_Http)
		err := b.DecodeMessage(msg)
		m.Event = &TapEvent_Http_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TapEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TapEvent)
	// event
	switch x := m.Event.(type) {
	case *TapEvent_Http_:
		s := proto.Size(x.Http)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TapEvent_EndpointMeta struct {
	Labels               map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TapEvent_EndpointMeta) Reset()         { *m = TapEvent_EndpointMeta{} }
func (m *TapEvent_EndpointMeta) String() string { return proto.CompactTextString(m) }
func (*TapEvent_EndpointMeta) ProtoMessage()    {}
func (*TapEvent_EndpointMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{2, 0}
}
func (m *TapEvent_EndpointMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TapEvent_EndpointMeta.Unmarshal(m, b)
}
func (m *TapEvent_EndpointMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TapEvent_EndpointMeta.Marshal(b, m, deterministic)
}
func (dst *TapEvent_EndpointMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TapEvent_EndpointMeta.Merge(dst, src)
}
func (m *TapEvent_EndpointMeta) XXX_Size() int {
	return xxx_messageInfo_TapEvent_EndpointMeta.Size(m)
}
func (m *TapEvent_EndpointMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_TapEvent_EndpointMeta.DiscardUnknown(m)
}

var xxx_messageInfo_TapEvent_EndpointMeta proto.InternalMessageInfo

func (m *TapEvent_EndpointMeta) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type TapEvent_Http struct {
	// Types that are valid to be assigned to Event:
	//	*TapEvent_Http_RequestInit_
	//	*TapEvent_Http_ResponseInit_
	//	*TapEvent_Http_ResponseEnd_
	Event                isTapEvent_Http_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TapEvent_Http) Reset()         { *m = TapEvent_Http{} }
func (m *TapEvent_Http) String() string { return proto.CompactTextString(m) }
func (*TapEvent_Http) ProtoMessage()    {}
func (*TapEvent_Http) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{2, 1}
}
func (m *TapEvent_Http) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TapEvent_Http.Unmarshal(m, b)
}
func (m *TapEvent_Http) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TapEvent_Http.Marshal(b, m, deterministic)
}
func (dst *TapEvent_Http) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TapEvent_Http.Merge(dst, src)
}
func (m *TapEvent_Http) XXX_Size() int {
	return xxx_messageInfo_TapEvent_Http.Size(m)
}
func (m *TapEvent_Http) XXX_DiscardUnknown() {
	xxx_messageInfo_TapEvent_Http.DiscardUnknown(m)
}

var xxx_messageInfo_TapEvent_Http proto.InternalMessageInfo

type isTapEvent_Http_Event interface {
	isTapEvent_Http_Event()
}

type TapEvent_Http_RequestInit_ struct {
	RequestInit *TapEvent_Http_RequestInit `protobuf:"bytes,1,opt,name=request_init,json=requestInit,proto3,oneof"`
}

type TapEvent_Http_ResponseInit_ struct {
	ResponseInit *TapEvent_Http_ResponseInit `protobuf:"bytes,2,opt,name=response_init,json=responseInit,proto3,oneof"`
}

type TapEvent_Http_ResponseEnd_ struct {
	ResponseEnd *TapEvent_Http_ResponseEnd `protobuf:"bytes,3,opt,name=response_end,json=responseEnd,proto3,oneof"`
}

func (*TapEvent_Http_RequestInit_) isTapEvent_Http_Event() {}

func (*TapEvent_Http_ResponseInit_) isTapEvent_Http_Event() {}

func (*TapEvent_Http_ResponseEnd_) isTapEvent_Http_Event() {}

func (m *TapEvent_Http) GetEvent() isTapEvent_Http_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *TapEvent_Http) GetRequestInit() *TapEvent_Http_RequestInit {
	if x, ok := m.GetEvent().(*TapEvent_Http_RequestInit_); ok {
		return x.RequestInit
	}
	return nil
}

func (m *TapEvent_Http) GetResponseInit() *TapEvent_Http_ResponseInit {
	if x, ok := m.GetEvent().(*TapEvent_Http_ResponseInit_); ok {
		return x.ResponseInit
	}
	return nil
}

func (m *TapEvent_Http) GetResponseEnd() *TapEvent_Http_ResponseEnd {
	if x, ok := m.GetEvent().(*TapEvent_Http_ResponseEnd_); ok {
		return x.ResponseEnd
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TapEvent_Http) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TapEvent_Http_OneofMarshaler, _TapEvent_Http_OneofUnmarshaler, _TapEvent_Http_OneofSizer, []interface{}{
		(*TapEvent_Http_RequestInit_)(nil),
		(*TapEvent_Http_ResponseInit_)(nil),
		(*TapEvent_Http_ResponseEnd_)(nil),
	}
}

func _TapEvent_Http_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TapEvent_Http)
	// event
	switch x := m.Event.(type) {
	case *TapEvent_Http_RequestInit_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestInit); err != nil {
			return err
		}
	case *TapEvent_Http_ResponseInit_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ResponseInit); err != nil {
			return err
		}
	case *TapEvent_Http_ResponseEnd_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ResponseEnd); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TapEvent_Http.Event has unexpected type %T", x)
	}
	return nil
}

func _TapEvent_Http_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TapEvent_Http)
	switch tag {
	case 1: // event.request_init
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TapEvent_Http_RequestInit)
		err := b.DecodeMessage(msg)
		m.Event = &TapEvent_Http_RequestInit_{msg}
		return true, err
	case 2: // event.response_init
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TapEvent_Http_ResponseInit)
		err := b.DecodeMessage(msg)
		m.Event = &TapEvent_Http_ResponseInit_{msg}
		return true, err
	case 3: // event.response_end
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TapEvent_Http_ResponseEnd)
		err := b.DecodeMessage(msg)
		m.Event = &TapEvent_Http_ResponseEnd_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TapEvent_Http_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TapEvent_Http)
	// event
	switch x := m.Event.(type) {
	case *TapEvent_Http_RequestInit_:
		s := proto.Size(x.RequestInit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TapEvent_Http_ResponseInit_:
		s := proto.Size(x.ResponseInit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TapEvent_Http_ResponseEnd_:
		s := proto.Size(x.ResponseEnd)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TapEvent_Http_StreamId struct {
	// A randomized base (stable across a process's runtime)
	Base uint32 `protobuf:"varint,1,opt,name=base,proto3" json:"base,omitempty"`
	// A stream id unique within the lifetime of `base`.
	Stream               uint64   `protobuf:"varint,2,opt,name=stream,proto3" json:"stream,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TapEvent_Http_StreamId) Reset()         { *m = TapEvent_Http_StreamId{} }
func (m *TapEvent_Http_StreamId) String() string { return proto.CompactTextString(m) }
func (*TapEvent_Http_StreamId) ProtoMessage()    {}
func (*TapEvent_Http_StreamId) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{2, 1, 0}
}
func (m *TapEvent_Http_StreamId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TapEvent_Http_StreamId.Unmarshal(m, b)
}
func (m *TapEvent_Http_StreamId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TapEvent_Http_StreamId.Marshal(b, m, deterministic)
}
func (dst *TapEvent_Http_StreamId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TapEvent_Http_StreamId.Merge(dst, src)
}
func (m *TapEvent_Http_StreamId) XXX_Size() int {
	return xxx_messageInfo_TapEvent_Http_StreamId.Size(m)
}
func (m *TapEvent_Http_StreamId) XXX_DiscardUnknown() {
	xxx_messageInfo_TapEvent_Http_StreamId.DiscardUnknown(m)
}

var xxx_messageInfo_TapEvent_Http_StreamId proto.InternalMessageInfo

func (m *TapEvent_Http_StreamId) GetBase() uint32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *TapEvent_Http_StreamId) GetStream() uint64 {
	if m != nil {
		return m.Stream
	}
	return 0
}

type TapEvent_Http_RequestInit struct {
	Id                   *TapEvent_Http_StreamId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Method               *http_types.HttpMethod  `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Scheme               *http_types.Scheme      `protobuf:"bytes,3,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Authority            string                  `protobuf:"bytes,4,opt,name=authority,proto3" json:"authority,omitempty"`
	Path                 string                  `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TapEvent_Http_RequestInit) Reset()         { *m = TapEvent_Http_RequestInit{} }
func (m *TapEvent_Http_RequestInit) String() string { return proto.CompactTextString(m) }
func (*TapEvent_Http_RequestInit) ProtoMessage()    {}
func (*TapEvent_Http_RequestInit) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{2, 1, 1}
}
func (m *TapEvent_Http_RequestInit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TapEvent_Http_RequestInit.Unmarshal(m, b)
}
func (m *TapEvent_Http_RequestInit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TapEvent_Http_RequestInit.Marshal(b, m, deterministic)
}
func (dst *TapEvent_Http_RequestInit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TapEvent_Http_RequestInit.Merge(dst, src)
}
func (m *TapEvent_Http_RequestInit) XXX_Size() int {
	return xxx_messageInfo_TapEvent_Http_RequestInit.Size(m)
}
func (m *TapEvent_Http_RequestInit) XXX_DiscardUnknown() {
	xxx_messageInfo_TapEvent_Http_RequestInit.DiscardUnknown(m)
}

var xxx_messageInfo_TapEvent_Http_RequestInit proto.InternalMessageInfo

func (m *TapEvent_Http_RequestInit) GetId() *TapEvent_Http_StreamId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TapEvent_Http_RequestInit) GetMethod() *http_types.HttpMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *TapEvent_Http_RequestInit) GetScheme() *http_types.Scheme {
	if m != nil {
		return m.Scheme
	}
	return nil
}

func (m *TapEvent_Http_RequestInit) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *TapEvent_Http_RequestInit) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type TapEvent_Http_ResponseInit struct {
	Id                   *TapEvent_Http_StreamId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SinceRequestInit     *duration.Duration      `protobuf:"bytes,2,opt,name=since_request_init,json=sinceRequestInit,proto3" json:"since_request_init,omitempty"`
	HttpStatus           uint32                  `protobuf:"varint,3,opt,name=http_status,json=httpStatus,proto3" json:"http_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TapEvent_Http_ResponseInit) Reset()         { *m = TapEvent_Http_ResponseInit{} }
func (m *TapEvent_Http_ResponseInit) String() string { return proto.CompactTextString(m) }
func (*TapEvent_Http_ResponseInit) ProtoMessage()    {}
func (*TapEvent_Http_ResponseInit) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{2, 1, 2}
}
func (m *TapEvent_Http_ResponseInit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TapEvent_Http_ResponseInit.Unmarshal(m, b)
}
func (m *TapEvent_Http_ResponseInit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TapEvent_Http_ResponseInit.Marshal(b, m, deterministic)
}
func (dst *TapEvent_Http_ResponseInit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TapEvent_Http_ResponseInit.Merge(dst, src)
}
func (m *TapEvent_Http_ResponseInit) XXX_Size() int {
	return xxx_messageInfo_TapEvent_Http_ResponseInit.Size(m)
}
func (m *TapEvent_Http_ResponseInit) XXX_DiscardUnknown() {
	xxx_messageInfo_TapEvent_Http_ResponseInit.DiscardUnknown(m)
}

var xxx_messageInfo_TapEvent_Http_ResponseInit proto.InternalMessageInfo

func (m *TapEvent_Http_ResponseInit) GetId() *TapEvent_Http_StreamId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TapEvent_Http_ResponseInit) GetSinceRequestInit() *duration.Duration {
	if m != nil {
		return m.SinceRequestInit
	}
	return nil
}

func (m *TapEvent_Http_ResponseInit) GetHttpStatus() uint32 {
	if m != nil {
		return m.HttpStatus
	}
	return 0
}

type TapEvent_Http_ResponseEnd struct {
	Id                   *TapEvent_Http_StreamId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SinceRequestInit     *duration.Duration      `protobuf:"bytes,2,opt,name=since_request_init,json=sinceRequestInit,proto3" json:"since_request_init,omitempty"`
	SinceResponseInit    *duration.Duration      `protobuf:"bytes,3,opt,name=since_response_init,json=sinceResponseInit,proto3" json:"since_response_init,omitempty"`
	ResponseBytes        uint64                  `protobuf:"varint,4,opt,name=response_bytes,json=responseBytes,proto3" json:"response_bytes,omitempty"`
	Eos                  *Eos                    `protobuf:"bytes,5,opt,name=eos,proto3" json:"eos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TapEvent_Http_ResponseEnd) Reset()         { *m = TapEvent_Http_ResponseEnd{} }
func (m *TapEvent_Http_ResponseEnd) String() string { return proto.CompactTextString(m) }
func (*TapEvent_Http_ResponseEnd) ProtoMessage()    {}
func (*TapEvent_Http_ResponseEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_tap_1e77073752e8e92a, []int{2, 1, 3}
}
func (m *TapEvent_Http_ResponseEnd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TapEvent_Http_ResponseEnd.Unmarshal(m, b)
}
func (m *TapEvent_Http_ResponseEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TapEvent_Http_ResponseEnd.Marshal(b, m, deterministic)
}
func (dst *TapEvent_Http_ResponseEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TapEvent_Http_ResponseEnd.Merge(dst, src)
}
func (m *TapEvent_Http_ResponseEnd) XXX_Size() int {
	return xxx_messageInfo_TapEvent_Http_ResponseEnd.Size(m)
}
func (m *TapEvent_Http_ResponseEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_TapEvent_Http_ResponseEnd.DiscardUnknown(m)
}

var xxx_messageInfo_TapEvent_Http_ResponseEnd proto.InternalMessageInfo

func (m *TapEvent_Http_ResponseEnd) GetId() *TapEvent_Http_StreamId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TapEvent_Http_ResponseEnd) GetSinceRequestInit() *duration.Duration {
	if m != nil {
		return m.SinceRequestInit
	}
	return nil
}

func (m *TapEvent_Http_ResponseEnd) GetSinceResponseInit() *duration.Duration {
	if m != nil {
		return m.SinceResponseInit
	}
	return nil
}

func (m *TapEvent_Http_ResponseEnd) GetResponseBytes() uint64 {
	if m != nil {
		return m.ResponseBytes
	}
	return 0
}

func (m *TapEvent_Http_ResponseEnd) GetEos() *Eos {
	if m != nil {
		return m.Eos
	}
	return nil
}

func init() {
	proto.RegisterType((*ObserveRequest)(nil), "io.linkerd.proxy.tap.ObserveRequest")
	proto.RegisterType((*ObserveRequest_Match)(nil), "io.linkerd.proxy.tap.ObserveRequest.Match")
	proto.RegisterType((*ObserveRequest_Match_Seq)(nil), "io.linkerd.proxy.tap.ObserveRequest.Match.Seq")
	proto.RegisterType((*ObserveRequest_Match_Label)(nil), "io.linkerd.proxy.tap.ObserveRequest.Match.Label")
	proto.RegisterType((*ObserveRequest_Match_Tcp)(nil), "io.linkerd.proxy.tap.ObserveRequest.Match.Tcp")
	proto.RegisterType((*ObserveRequest_Match_Tcp_Netmask)(nil), "io.linkerd.proxy.tap.ObserveRequest.Match.Tcp.Netmask")
	proto.RegisterType((*ObserveRequest_Match_Tcp_PortRange)(nil), "io.linkerd.proxy.tap.ObserveRequest.Match.Tcp.PortRange")
	proto.RegisterType((*ObserveRequest_Match_Http)(nil), "io.linkerd.proxy.tap.ObserveRequest.Match.Http")
	proto.RegisterType((*ObserveRequest_Match_Http_StringMatch)(nil), "io.linkerd.proxy.tap.ObserveRequest.Match.Http.StringMatch")
	proto.RegisterType((*Eos)(nil), "io.linkerd.proxy.tap.Eos")
	proto.RegisterType((*TapEvent)(nil), "io.linkerd.proxy.tap.TapEvent")
	proto.RegisterType((*TapEvent_EndpointMeta)(nil), "io.linkerd.proxy.tap.TapEvent.EndpointMeta")
	proto.RegisterMapType((map[string]string)(nil), "io.linkerd.proxy.tap.TapEvent.EndpointMeta.LabelsEntry")
	proto.RegisterType((*TapEvent_Http)(nil), "io.linkerd.proxy.tap.TapEvent.Http")
	proto.RegisterType((*TapEvent_Http_StreamId)(nil), "io.linkerd.proxy.tap.TapEvent.Http.StreamId")
	proto.RegisterType((*TapEvent_Http_RequestInit)(nil), "io.linkerd.proxy.tap.TapEvent.Http.RequestInit")
	proto.RegisterType((*TapEvent_Http_ResponseInit)(nil), "io.linkerd.proxy.tap.TapEvent.Http.ResponseInit")
	proto.RegisterType((*TapEvent_Http_ResponseEnd)(nil), "io.linkerd.proxy.tap.TapEvent.Http.ResponseEnd")
	proto.RegisterEnum("io.linkerd.proxy.tap.TapEvent_ProxyDirection", TapEvent_ProxyDirection_name, TapEvent_ProxyDirection_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TapClient is the client API for Tap service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TapClient interface {
	Observe(ctx context.Context, in *ObserveRequest, opts ...grpc.CallOption) (Tap_ObserveClient, error)
}

type tapClient struct {
	cc *grpc.ClientConn
}

func NewTapClient(cc *grpc.ClientConn) TapClient {
	return &tapClient{cc}
}

func (c *tapClient) Observe(ctx context.Context, in *ObserveRequest, opts ...grpc.CallOption) (Tap_ObserveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Tap_serviceDesc.Streams[0], "/io.linkerd.proxy.tap.Tap/Observe", opts...)
	if err != nil {
		return nil, err
	}
	x := &tapObserveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Tap_ObserveClient interface {
	Recv() (*TapEvent, error)
	grpc.ClientStream
}

type tapObserveClient struct {
	grpc.ClientStream
}

func (x *tapObserveClient) Recv() (*TapEvent, error) {
	m := new(TapEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TapServer is the server API for Tap service.
type TapServer interface {
	Observe(*ObserveRequest, Tap_ObserveServer) error
}

func RegisterTapServer(s *grpc.Server, srv TapServer) {
	s.RegisterService(&_Tap_serviceDesc, srv)
}

func _Tap_Observe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ObserveRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TapServer).Observe(m, &tapObserveServer{stream})
}

type Tap_ObserveServer interface {
	Send(*TapEvent) error
	grpc.ServerStream
}

type tapObserveServer struct {
	grpc.ServerStream
}

func (x *tapObserveServer) Send(m *TapEvent) error {
	return x.ServerStream.SendMsg(m)
}

var _Tap_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.linkerd.proxy.tap.Tap",
	HandlerType: (*TapServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Observe",
			Handler:       _Tap_Observe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "tap.proto",
}

func init() { proto.RegisterFile("tap.proto", fileDescriptor_tap_1e77073752e8e92a) }

var fileDescriptor_tap_1e77073752e8e92a = []byte{
	// 1201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0x96, 0x48, 0x1d, 0xac, 0x91, 0xad, 0x28, 0xfb, 0x07, 0x81, 0x42, 0xfc, 0x48, 0x0c, 0xb7,
	0x45, 0x83, 0x1c, 0xa8, 0xc0, 0x05, 0x52, 0xa7, 0xe9, 0x29, 0xaa, 0x85, 0xca, 0x48, 0x22, 0xbb,
	0x2b, 0x25, 0x01, 0xd2, 0x0b, 0x81, 0x22, 0x37, 0x12, 0x11, 0x89, 0x4b, 0xef, 0xae, 0x0c, 0xeb,
	0x19, 0xfa, 0x06, 0x7d, 0x8d, 0xa2, 0x05, 0xfa, 0x10, 0x7d, 0x84, 0xde, 0xf4, 0x35, 0x7a, 0x53,
	0xec, 0x81, 0x0c, 0x55, 0x3b, 0x8e, 0x98, 0xdc, 0xf4, 0x4a, 0x33, 0xb3, 0x3b, 0x1f, 0x67, 0xe7,
	0xf0, 0x8d, 0xa0, 0x26, 0xbc, 0xd8, 0x8d, 0x19, 0x15, 0x14, 0x5d, 0x09, 0xa9, 0x3b, 0x0b, 0xa3,
	0xd7, 0x84, 0x05, 0xd2, 0x72, 0xba, 0x74, 0x85, 0x17, 0x3b, 0xd7, 0x27, 0x94, 0x4e, 0x66, 0xa4,
	0xad, 0xee, 0x8c, 0x17, 0xaf, 0xda, 0xc1, 0x82, 0x79, 0x22, 0xa4, 0x91, 0xf6, 0x72, 0x9a, 0x53,
	0x21, 0xe2, 0x91, 0x58, 0xc6, 0x84, 0x1b, 0x4b, 0x2d, 0x22, 0x42, 0x8b, 0x3b, 0x7f, 0xd4, 0xa1,
	0x71, 0x38, 0xe6, 0x84, 0x9d, 0x10, 0x4c, 0x8e, 0x17, 0x84, 0x0b, 0x74, 0x05, 0xca, 0xb3, 0x70,
	0x1e, 0x8a, 0x56, 0x71, 0xbb, 0x78, 0x73, 0x0b, 0x6b, 0x05, 0x7d, 0x0b, 0xe5, 0xb9, 0x27, 0xfc,
	0x69, 0xcb, 0xda, 0x2e, 0xde, 0xac, 0xef, 0xde, 0x72, 0xcf, 0x8b, 0xc5, 0x5d, 0x85, 0x72, 0x9f,
	0x4a, 0x0f, 0xac, 0x1d, 0x9d, 0xbf, 0x00, 0xca, 0xca, 0x80, 0x3a, 0x60, 0x7b, 0xb3, 0x99, 0xc2,
	0xaf, 0xef, 0xba, 0xeb, 0x23, 0xb9, 0x03, 0x72, 0xdc, 0x2b, 0x60, 0xe9, 0xac, 0x30, 0xa2, 0xa5,
	0x89, 0xe6, 0x7d, 0x30, 0xa2, 0x25, 0xfa, 0x1a, 0xec, 0x88, 0x8a, 0x96, 0x9d, 0xf7, 0x45, 0xd2,
	0x3f, 0xa2, 0x02, 0xf5, 0xa0, 0xc2, 0xe9, 0x82, 0xf9, 0xa4, 0x55, 0xca, 0x1d, 0xc6, 0xd0, 0x8f,
	0x7b, 0x05, 0x6c, 0xfc, 0x11, 0x86, 0x7a, 0x40, 0xb8, 0x08, 0x23, 0x55, 0xb8, 0x56, 0xf9, 0x3d,
	0xe1, 0xb2, 0x20, 0xa8, 0x0b, 0x25, 0x59, 0xf9, 0x56, 0x45, 0x81, 0xb5, 0x73, 0x80, 0xf5, 0x84,
	0x90, 0x68, 0xca, 0x1d, 0x8d, 0xe0, 0x72, 0x06, 0x75, 0x34, 0xf3, 0xc6, 0x64, 0xd6, 0xaa, 0x2a,
	0xcc, 0x7b, 0x39, 0x30, 0x9f, 0x48, 0xbf, 0x5e, 0x01, 0x37, 0x33, 0x60, 0xca, 0xe6, 0x3c, 0x06,
	0x7b, 0x40, 0x8e, 0xd1, 0x3e, 0x54, 0x55, 0x9f, 0x10, 0xde, 0x2a, 0x6e, 0xdb, 0x39, 0x5b, 0x2c,
	0x71, 0x75, 0xda, 0x50, 0x56, 0xa8, 0xa8, 0x09, 0xf6, 0x6b, 0xb2, 0x54, 0x3d, 0x56, 0xc3, 0x52,
	0x94, 0x7d, 0x7d, 0xe2, 0xcd, 0x16, 0x44, 0xf5, 0x4c, 0x0d, 0x6b, 0xc5, 0xf9, 0xd5, 0x02, 0x7b,
	0xe8, 0xc7, 0x08, 0x43, 0x35, 0x22, 0x62, 0xee, 0xf1, 0xd7, 0xa6, 0x2f, 0xef, 0xe7, 0xcb, 0xbe,
	0xdb, 0xd7, 0xde, 0xbd, 0x02, 0x4e, 0x80, 0xd0, 0x11, 0x94, 0x63, 0xca, 0x04, 0x37, 0x1d, 0xb6,
	0x97, 0x13, 0xf1, 0x88, 0x32, 0x81, 0xbd, 0x68, 0x42, 0x7a, 0x05, 0xac, 0x81, 0x9c, 0x3e, 0x54,
	0xcd, 0x77, 0x50, 0x1b, 0xac, 0x30, 0x36, 0xb1, 0xde, 0x38, 0x8b, 0x2c, 0x47, 0xfc, 0xe0, 0xe8,
	0x51, 0x10, 0x30, 0xc2, 0x39, 0xb6, 0xc2, 0x18, 0x21, 0x28, 0xa9, 0xe7, 0x59, 0x6a, 0xac, 0x95,
	0xec, 0xb4, 0xa1, 0x96, 0x7e, 0x45, 0xa6, 0x6c, 0x1e, 0x46, 0x66, 0xec, 0xa5, 0xa8, 0x2c, 0xde,
	0xa9, 0xf1, 0x90, 0x62, 0xa7, 0x6a, 0x68, 0xc0, 0xf9, 0xc9, 0x86, 0x92, 0xec, 0x13, 0xf4, 0x15,
	0x54, 0xb8, 0x3f, 0x25, 0x73, 0x62, 0x62, 0xf9, 0xe8, 0x6c, 0x2c, 0x19, 0x02, 0x1a, 0xa8, 0xab,
	0xaa, 0xf3, 0x95, 0x84, 0x1e, 0x41, 0x65, 0x4e, 0xc4, 0x94, 0x06, 0x26, 0x49, 0x9f, 0x5e, 0xe8,
	0x2e, 0xbf, 0xf8, 0x54, 0x5d, 0x97, 0x10, 0xda, 0x11, 0xfd, 0x08, 0x35, 0x6f, 0x21, 0xa6, 0x94,
	0x85, 0x22, 0x21, 0x84, 0x87, 0x39, 0xbb, 0xdd, 0x1d, 0x08, 0x16, 0x46, 0x93, 0x64, 0xba, 0xdf,
	0xe0, 0xa1, 0x1f, 0xa0, 0x14, 0x7b, 0x62, 0x6a, 0x26, 0xfc, 0x03, 0x71, 0x15, 0x94, 0xd3, 0x83,
	0x7a, 0xc6, 0x8c, 0xae, 0x42, 0x99, 0x9c, 0x7a, 0xbe, 0xe6, 0xdb, 0x9a, 0xac, 0xb5, 0x52, 0x51,
	0x0b, 0x2a, 0x31, 0x23, 0xaf, 0x42, 0x9d, 0x7f, 0x79, 0x60, 0xf4, 0xb4, 0x08, 0x67, 0x85, 0x9d,
	0x00, 0xec, 0x2e, 0xe5, 0xe8, 0x16, 0x34, 0x27, 0x2c, 0xf6, 0x47, 0x5c, 0x78, 0x62, 0xc1, 0x47,
	0x3e, 0x0d, 0x74, 0x79, 0xb6, 0x7a, 0x05, 0xdc, 0x90, 0x27, 0x03, 0x75, 0xf0, 0x1d, 0x0d, 0x88,
	0xbc, 0xcb, 0x08, 0x27, 0x62, 0x44, 0x18, 0xa3, 0x4c, 0xdf, 0xb5, 0x92, 0xbb, 0xea, 0xa4, 0x2b,
	0x0f, 0xe4, 0xdd, 0x4e, 0x19, 0x6c, 0x12, 0x05, 0x3b, 0x7f, 0x6e, 0xc1, 0xc6, 0xd0, 0x8b, 0xbb,
	0x27, 0x24, 0x12, 0x68, 0x2f, 0x65, 0x41, 0xdd, 0x00, 0xdb, 0xe7, 0x37, 0xe3, 0xd0, 0x8f, 0x93,
	0x6e, 0x4c, 0x58, 0xef, 0x09, 0xd4, 0xb5, 0x34, 0x9a, 0x13, 0xe1, 0x19, 0xd6, 0xbb, 0x7d, 0x7e,
	0x8a, 0x93, 0xcf, 0xb9, 0xdd, 0x28, 0x88, 0x69, 0x18, 0x89, 0xa7, 0x44, 0x78, 0x18, 0xb4, 0xbf,
	0x94, 0x51, 0x67, 0x95, 0x43, 0xad, 0x35, 0x83, 0x59, 0xe1, 0xcc, 0xe7, 0x90, 0xe5, 0x27, 0x1d,
	0x56, 0x29, 0x7f, 0x58, 0x97, 0x32, 0x20, 0x2a, 0xb6, 0xe7, 0x70, 0x49, 0xf9, 0x8c, 0x82, 0x90,
	0x11, 0x5f, 0xc5, 0x27, 0x69, 0xb9, 0xb1, 0x7b, 0xf7, 0x1d, 0xb0, 0x47, 0xd2, 0xb4, 0x9f, 0x38,
	0xe1, 0x46, 0xbc, 0xa2, 0xa3, 0x07, 0x86, 0xe3, 0xed, 0xb7, 0x8d, 0xde, 0x0a, 0x58, 0x96, 0xd7,
	0x9d, 0x9f, 0x8b, 0xb0, 0x99, 0x0d, 0x1a, 0x1d, 0x42, 0x45, 0x91, 0x7b, 0xc2, 0xbf, 0x9f, 0xe7,
	0x78, 0xb1, 0xa6, 0x77, 0xde, 0x8d, 0x04, 0x5b, 0x62, 0x03, 0xe3, 0x3c, 0x80, 0x7a, 0xc6, 0xbc,
	0x2e, 0x23, 0x7f, 0x61, 0xed, 0x15, 0x9d, 0xdf, 0x37, 0x0c, 0xbb, 0x0c, 0x61, 0x93, 0xe9, 0xa9,
	0x1a, 0x85, 0x91, 0xf9, 0x4f, 0xf2, 0xd6, 0x65, 0xb6, 0xf2, 0x50, 0xd7, 0x4c, 0xe3, 0x41, 0x14,
	0x0a, 0xb9, 0x1a, 0xd9, 0x1b, 0x15, 0xbd, 0x80, 0x2d, 0x46, 0x78, 0x4c, 0x23, 0x4e, 0x34, 0xac,
	0x75, 0xd1, 0x3e, 0xfb, 0x37, 0xac, 0x76, 0x34, 0xb8, 0x9b, 0x2c, 0xa3, 0xeb, 0x70, 0x0d, 0x30,
	0x89, 0x12, 0x4e, 0x6b, 0xe7, 0xc1, 0xed, 0x46, 0x81, 0x0e, 0x37, 0x55, 0x9d, 0xfb, 0xb0, 0x31,
	0x10, 0x8c, 0x78, 0xf3, 0x83, 0x40, 0xb2, 0xf8, 0xd8, 0xe3, 0x66, 0x9a, 0xb1, 0x92, 0xd1, 0x55,
	0xa8, 0x70, 0x75, 0xae, 0xde, 0x51, 0xc2, 0x46, 0x73, 0xfe, 0x2e, 0x42, 0x3d, 0x93, 0x05, 0xf4,
	0x25, 0x58, 0x61, 0x60, 0x52, 0x78, 0x67, 0x9d, 0x98, 0x92, 0xaf, 0x62, 0x2b, 0x0c, 0xd0, 0x37,
	0x29, 0x53, 0x5b, 0xb9, 0x98, 0x3a, 0xe5, 0xe9, 0x87, 0xe9, 0xa6, 0xb0, 0xd7, 0xde, 0x14, 0xe9,
	0x9e, 0xf8, 0x7f, 0x96, 0xe4, 0x4b, 0xaa, 0x5f, 0x32, 0x2c, 0x8d, 0x0c, 0x4b, 0x97, 0xd5, 0x81,
	0xa6, 0xd9, 0xdf, 0x8a, 0xb0, 0x99, 0x2d, 0xd6, 0x07, 0x3e, 0xff, 0x7b, 0x40, 0x3c, 0x8c, 0x7c,
	0x32, 0x5a, 0xe9, 0x47, 0x9d, 0x8a, 0x6b, 0xae, 0xfe, 0x0f, 0xee, 0x26, 0xff, 0xc1, 0xdd, 0x7d,
	0xf3, 0x1f, 0x1c, 0x37, 0x95, 0x53, 0xb6, 0x0a, 0x37, 0xa0, 0xae, 0x9e, 0xa9, 0xb9, 0x59, 0xe5,
	0x62, 0x0b, 0x83, 0x34, 0x69, 0x52, 0x76, 0x7e, 0xb1, 0x64, 0xd9, 0xd2, 0xf2, 0xff, 0x57, 0xe2,
	0x3e, 0x80, 0xff, 0x25, 0x40, 0xd9, 0xd1, 0xb1, 0xdf, 0x85, 0x74, 0xd9, 0x20, 0x65, 0x2a, 0xf1,
	0x09, 0x34, 0x52, 0x90, 0xf1, 0x52, 0x10, 0xae, 0x2a, 0x5a, 0xc2, 0xe9, 0x54, 0x76, 0xa4, 0x11,
	0xdd, 0x06, 0x9b, 0x50, 0x6e, 0xf6, 0xc2, 0xb5, 0xf3, 0x5f, 0xde, 0xa5, 0x1c, 0xcb, 0x5b, 0x72,
	0x05, 0x12, 0x99, 0x82, 0x9d, 0x3d, 0x68, 0xac, 0xb2, 0x26, 0xaa, 0x43, 0xf5, 0x59, 0xff, 0x71,
	0xff, 0xf0, 0x45, 0xbf, 0x59, 0x90, 0xca, 0x41, 0xbf, 0x73, 0xf8, 0xac, 0xbf, 0xdf, 0x2c, 0xa2,
	0x4d, 0xd8, 0x38, 0x7c, 0x36, 0xd4, 0x9a, 0x95, 0x42, 0xec, 0xbe, 0x04, 0x7b, 0xe8, 0xc5, 0x68,
	0x00, 0x55, 0xb3, 0xd9, 0xd1, 0xc7, 0xeb, 0x2c, 0x7e, 0xe7, 0xfa, 0xc5, 0xd5, 0xd9, 0x29, 0xdc,
	0x2b, 0x76, 0xdc, 0x97, 0x77, 0x26, 0xa1, 0x98, 0x2e, 0xc6, 0xae, 0x4f, 0xe7, 0x6d, 0x73, 0x39,
	0xf9, 0xdd, 0xbd, 0xab, 0xbc, 0xee, 0x7a, 0x71, 0xd8, 0x9e, 0xd0, 0xb6, 0xf0, 0xe2, 0x71, 0x45,
	0x65, 0xf4, 0xb3, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x1e, 0xab, 0x19, 0x08, 0x0e, 0x00,
	0x00,
}
