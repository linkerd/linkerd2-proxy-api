syntax = "proto3";

package io.linkerd.proxy.tls_route;
option go_package = "github.com/linkerd/linkerd2-proxy-api/go/tls_route";

// Describes how to match an `SNI` ClientHello extension.
message SniMatch {
  oneof match {
    // Match an exact SNI, e.g. www.example.com.
    string exact = 1;

    // Match a SNI as a wildcard suffix, e.g. *.example.com.
    Suffix suffix = 2;
  }

  // A match like `*.example.com` is encoded as [com, example].
  message Suffix { repeated string reverse_labels = 1; }
}

// Error type that is used to indicate that this backend
// is invalid and traffic targeted to it should be failed.
message InvalidBackendError {
  string message = 1;
}

// Error type that is used to indicate that any traffic
// that is delivered through a route should be failed.
message RouteError {
  Kind kind = 1;

  enum Kind {
    FORBIDDEN = 0;
  }
}
